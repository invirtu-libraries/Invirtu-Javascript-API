{"version":3,"file":"from-2f328fe3.js","sources":["../../node_modules/node-domexception/index.js","../../node_modules/web-streams-polyfill/dist/ponyfill.es2018.js","../../node_modules/fetch-blob/streams.cjs","../../node_modules/fetch-blob/index.js","../../node_modules/fetch-blob/file.js","../../node_modules/fetch-blob/from.js"],"sourcesContent":["/*! node-domexception. MIT License. Jimmy WÃ¤rting <https://jimmy.warting.se/opensource> */\n\nif (!globalThis.DOMException) {\n  try {\n    const { MessageChannel } = require('worker_threads'),\n    port = new MessageChannel().port1,\n    ab = new ArrayBuffer()\n    port.postMessage(ab, [ab, ab])\n  } catch (err) {\n    err.constructor.name === 'DOMException' && (\n      globalThis.DOMException = err.constructor\n    )\n  }\n}\n\nmodule.exports = globalThis.DOMException\n","/**\n * web-streams-polyfill v3.2.1\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.WebStreamsPolyfill = {}));\n}(this, (function (exports) { 'use strict';\n\n    /// <reference lib=\"es2015.symbol\" />\n    const SymbolPolyfill = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ?\n        Symbol :\n        description => `Symbol(${description})`;\n\n    /// <reference lib=\"dom\" />\n    function noop() {\n        return undefined;\n    }\n    function getGlobals() {\n        if (typeof self !== 'undefined') {\n            return self;\n        }\n        else if (typeof window !== 'undefined') {\n            return window;\n        }\n        else if (typeof global !== 'undefined') {\n            return global;\n        }\n        return undefined;\n    }\n    const globals = getGlobals();\n\n    function typeIsObject(x) {\n        return (typeof x === 'object' && x !== null) || typeof x === 'function';\n    }\n    const rethrowAssertionErrorRejection = noop;\n\n    const originalPromise = Promise;\n    const originalPromiseThen = Promise.prototype.then;\n    const originalPromiseResolve = Promise.resolve.bind(originalPromise);\n    const originalPromiseReject = Promise.reject.bind(originalPromise);\n    function newPromise(executor) {\n        return new originalPromise(executor);\n    }\n    function promiseResolvedWith(value) {\n        return originalPromiseResolve(value);\n    }\n    function promiseRejectedWith(reason) {\n        return originalPromiseReject(reason);\n    }\n    function PerformPromiseThen(promise, onFulfilled, onRejected) {\n        // There doesn't appear to be any way to correctly emulate the behaviour from JavaScript, so this is just an\n        // approximation.\n        return originalPromiseThen.call(promise, onFulfilled, onRejected);\n    }\n    function uponPromise(promise, onFulfilled, onRejected) {\n        PerformPromiseThen(PerformPromiseThen(promise, onFulfilled, onRejected), undefined, rethrowAssertionErrorRejection);\n    }\n    function uponFulfillment(promise, onFulfilled) {\n        uponPromise(promise, onFulfilled);\n    }\n    function uponRejection(promise, onRejected) {\n        uponPromise(promise, undefined, onRejected);\n    }\n    function transformPromiseWith(promise, fulfillmentHandler, rejectionHandler) {\n        return PerformPromiseThen(promise, fulfillmentHandler, rejectionHandler);\n    }\n    function setPromiseIsHandledToTrue(promise) {\n        PerformPromiseThen(promise, undefined, rethrowAssertionErrorRejection);\n    }\n    const queueMicrotask = (() => {\n        const globalQueueMicrotask = globals && globals.queueMicrotask;\n        if (typeof globalQueueMicrotask === 'function') {\n            return globalQueueMicrotask;\n        }\n        const resolvedPromise = promiseResolvedWith(undefined);\n        return (fn) => PerformPromiseThen(resolvedPromise, fn);\n    })();\n    function reflectCall(F, V, args) {\n        if (typeof F !== 'function') {\n            throw new TypeError('Argument is not a function');\n        }\n        return Function.prototype.apply.call(F, V, args);\n    }\n    function promiseCall(F, V, args) {\n        try {\n            return promiseResolvedWith(reflectCall(F, V, args));\n        }\n        catch (value) {\n            return promiseRejectedWith(value);\n        }\n    }\n\n    // Original from Chromium\n    // https://chromium.googlesource.com/chromium/src/+/0aee4434a4dba42a42abaea9bfbc0cd196a63bc1/third_party/blink/renderer/core/streams/SimpleQueue.js\n    const QUEUE_MAX_ARRAY_SIZE = 16384;\n    /**\n     * Simple queue structure.\n     *\n     * Avoids scalability issues with using a packed array directly by using\n     * multiple arrays in a linked list and keeping the array size bounded.\n     */\n    class SimpleQueue {\n        constructor() {\n            this._cursor = 0;\n            this._size = 0;\n            // _front and _back are always defined.\n            this._front = {\n                _elements: [],\n                _next: undefined\n            };\n            this._back = this._front;\n            // The cursor is used to avoid calling Array.shift().\n            // It contains the index of the front element of the array inside the\n            // front-most node. It is always in the range [0, QUEUE_MAX_ARRAY_SIZE).\n            this._cursor = 0;\n            // When there is only one node, size === elements.length - cursor.\n            this._size = 0;\n        }\n        get length() {\n            return this._size;\n        }\n        // For exception safety, this method is structured in order:\n        // 1. Read state\n        // 2. Calculate required state mutations\n        // 3. Perform state mutations\n        push(element) {\n            const oldBack = this._back;\n            let newBack = oldBack;\n            if (oldBack._elements.length === QUEUE_MAX_ARRAY_SIZE - 1) {\n                newBack = {\n                    _elements: [],\n                    _next: undefined\n                };\n            }\n            // push() is the mutation most likely to throw an exception, so it\n            // goes first.\n            oldBack._elements.push(element);\n            if (newBack !== oldBack) {\n                this._back = newBack;\n                oldBack._next = newBack;\n            }\n            ++this._size;\n        }\n        // Like push(), shift() follows the read -> calculate -> mutate pattern for\n        // exception safety.\n        shift() { // must not be called on an empty queue\n            const oldFront = this._front;\n            let newFront = oldFront;\n            const oldCursor = this._cursor;\n            let newCursor = oldCursor + 1;\n            const elements = oldFront._elements;\n            const element = elements[oldCursor];\n            if (newCursor === QUEUE_MAX_ARRAY_SIZE) {\n                newFront = oldFront._next;\n                newCursor = 0;\n            }\n            // No mutations before this point.\n            --this._size;\n            this._cursor = newCursor;\n            if (oldFront !== newFront) {\n                this._front = newFront;\n            }\n            // Permit shifted element to be garbage collected.\n            elements[oldCursor] = undefined;\n            return element;\n        }\n        // The tricky thing about forEach() is that it can be called\n        // re-entrantly. The queue may be mutated inside the callback. It is easy to\n        // see that push() within the callback has no negative effects since the end\n        // of the queue is checked for on every iteration. If shift() is called\n        // repeatedly within the callback then the next iteration may return an\n        // element that has been removed. In this case the callback will be called\n        // with undefined values until we either \"catch up\" with elements that still\n        // exist or reach the back of the queue.\n        forEach(callback) {\n            let i = this._cursor;\n            let node = this._front;\n            let elements = node._elements;\n            while (i !== elements.length || node._next !== undefined) {\n                if (i === elements.length) {\n                    node = node._next;\n                    elements = node._elements;\n                    i = 0;\n                    if (elements.length === 0) {\n                        break;\n                    }\n                }\n                callback(elements[i]);\n                ++i;\n            }\n        }\n        // Return the element that would be returned if shift() was called now,\n        // without modifying the queue.\n        peek() { // must not be called on an empty queue\n            const front = this._front;\n            const cursor = this._cursor;\n            return front._elements[cursor];\n        }\n    }\n\n    function ReadableStreamReaderGenericInitialize(reader, stream) {\n        reader._ownerReadableStream = stream;\n        stream._reader = reader;\n        if (stream._state === 'readable') {\n            defaultReaderClosedPromiseInitialize(reader);\n        }\n        else if (stream._state === 'closed') {\n            defaultReaderClosedPromiseInitializeAsResolved(reader);\n        }\n        else {\n            defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n        }\n    }\n    // A client of ReadableStreamDefaultReader and ReadableStreamBYOBReader may use these functions directly to bypass state\n    // check.\n    function ReadableStreamReaderGenericCancel(reader, reason) {\n        const stream = reader._ownerReadableStream;\n        return ReadableStreamCancel(stream, reason);\n    }\n    function ReadableStreamReaderGenericRelease(reader) {\n        if (reader._ownerReadableStream._state === 'readable') {\n            defaultReaderClosedPromiseReject(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));\n        }\n        else {\n            defaultReaderClosedPromiseResetToRejected(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));\n        }\n        reader._ownerReadableStream._reader = undefined;\n        reader._ownerReadableStream = undefined;\n    }\n    // Helper functions for the readers.\n    function readerLockException(name) {\n        return new TypeError('Cannot ' + name + ' a stream using a released reader');\n    }\n    // Helper functions for the ReadableStreamDefaultReader.\n    function defaultReaderClosedPromiseInitialize(reader) {\n        reader._closedPromise = newPromise((resolve, reject) => {\n            reader._closedPromise_resolve = resolve;\n            reader._closedPromise_reject = reject;\n        });\n    }\n    function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {\n        defaultReaderClosedPromiseInitialize(reader);\n        defaultReaderClosedPromiseReject(reader, reason);\n    }\n    function defaultReaderClosedPromiseInitializeAsResolved(reader) {\n        defaultReaderClosedPromiseInitialize(reader);\n        defaultReaderClosedPromiseResolve(reader);\n    }\n    function defaultReaderClosedPromiseReject(reader, reason) {\n        if (reader._closedPromise_reject === undefined) {\n            return;\n        }\n        setPromiseIsHandledToTrue(reader._closedPromise);\n        reader._closedPromise_reject(reason);\n        reader._closedPromise_resolve = undefined;\n        reader._closedPromise_reject = undefined;\n    }\n    function defaultReaderClosedPromiseResetToRejected(reader, reason) {\n        defaultReaderClosedPromiseInitializeAsRejected(reader, reason);\n    }\n    function defaultReaderClosedPromiseResolve(reader) {\n        if (reader._closedPromise_resolve === undefined) {\n            return;\n        }\n        reader._closedPromise_resolve(undefined);\n        reader._closedPromise_resolve = undefined;\n        reader._closedPromise_reject = undefined;\n    }\n\n    const AbortSteps = SymbolPolyfill('[[AbortSteps]]');\n    const ErrorSteps = SymbolPolyfill('[[ErrorSteps]]');\n    const CancelSteps = SymbolPolyfill('[[CancelSteps]]');\n    const PullSteps = SymbolPolyfill('[[PullSteps]]');\n\n    /// <reference lib=\"es2015.core\" />\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite#Polyfill\n    const NumberIsFinite = Number.isFinite || function (x) {\n        return typeof x === 'number' && isFinite(x);\n    };\n\n    /// <reference lib=\"es2015.core\" />\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc#Polyfill\n    const MathTrunc = Math.trunc || function (v) {\n        return v < 0 ? Math.ceil(v) : Math.floor(v);\n    };\n\n    // https://heycam.github.io/webidl/#idl-dictionaries\n    function isDictionary(x) {\n        return typeof x === 'object' || typeof x === 'function';\n    }\n    function assertDictionary(obj, context) {\n        if (obj !== undefined && !isDictionary(obj)) {\n            throw new TypeError(`${context} is not an object.`);\n        }\n    }\n    // https://heycam.github.io/webidl/#idl-callback-functions\n    function assertFunction(x, context) {\n        if (typeof x !== 'function') {\n            throw new TypeError(`${context} is not a function.`);\n        }\n    }\n    // https://heycam.github.io/webidl/#idl-object\n    function isObject(x) {\n        return (typeof x === 'object' && x !== null) || typeof x === 'function';\n    }\n    function assertObject(x, context) {\n        if (!isObject(x)) {\n            throw new TypeError(`${context} is not an object.`);\n        }\n    }\n    function assertRequiredArgument(x, position, context) {\n        if (x === undefined) {\n            throw new TypeError(`Parameter ${position} is required in '${context}'.`);\n        }\n    }\n    function assertRequiredField(x, field, context) {\n        if (x === undefined) {\n            throw new TypeError(`${field} is required in '${context}'.`);\n        }\n    }\n    // https://heycam.github.io/webidl/#idl-unrestricted-double\n    function convertUnrestrictedDouble(value) {\n        return Number(value);\n    }\n    function censorNegativeZero(x) {\n        return x === 0 ? 0 : x;\n    }\n    function integerPart(x) {\n        return censorNegativeZero(MathTrunc(x));\n    }\n    // https://heycam.github.io/webidl/#idl-unsigned-long-long\n    function convertUnsignedLongLongWithEnforceRange(value, context) {\n        const lowerBound = 0;\n        const upperBound = Number.MAX_SAFE_INTEGER;\n        let x = Number(value);\n        x = censorNegativeZero(x);\n        if (!NumberIsFinite(x)) {\n            throw new TypeError(`${context} is not a finite number`);\n        }\n        x = integerPart(x);\n        if (x < lowerBound || x > upperBound) {\n            throw new TypeError(`${context} is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`);\n        }\n        if (!NumberIsFinite(x) || x === 0) {\n            return 0;\n        }\n        // TODO Use BigInt if supported?\n        // let xBigInt = BigInt(integerPart(x));\n        // xBigInt = BigInt.asUintN(64, xBigInt);\n        // return Number(xBigInt);\n        return x;\n    }\n\n    function assertReadableStream(x, context) {\n        if (!IsReadableStream(x)) {\n            throw new TypeError(`${context} is not a ReadableStream.`);\n        }\n    }\n\n    // Abstract operations for the ReadableStream.\n    function AcquireReadableStreamDefaultReader(stream) {\n        return new ReadableStreamDefaultReader(stream);\n    }\n    // ReadableStream API exposed for controllers.\n    function ReadableStreamAddReadRequest(stream, readRequest) {\n        stream._reader._readRequests.push(readRequest);\n    }\n    function ReadableStreamFulfillReadRequest(stream, chunk, done) {\n        const reader = stream._reader;\n        const readRequest = reader._readRequests.shift();\n        if (done) {\n            readRequest._closeSteps();\n        }\n        else {\n            readRequest._chunkSteps(chunk);\n        }\n    }\n    function ReadableStreamGetNumReadRequests(stream) {\n        return stream._reader._readRequests.length;\n    }\n    function ReadableStreamHasDefaultReader(stream) {\n        const reader = stream._reader;\n        if (reader === undefined) {\n            return false;\n        }\n        if (!IsReadableStreamDefaultReader(reader)) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A default reader vended by a {@link ReadableStream}.\n     *\n     * @public\n     */\n    class ReadableStreamDefaultReader {\n        constructor(stream) {\n            assertRequiredArgument(stream, 1, 'ReadableStreamDefaultReader');\n            assertReadableStream(stream, 'First parameter');\n            if (IsReadableStreamLocked(stream)) {\n                throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n            }\n            ReadableStreamReaderGenericInitialize(this, stream);\n            this._readRequests = new SimpleQueue();\n        }\n        /**\n         * Returns a promise that will be fulfilled when the stream becomes closed,\n         * or rejected if the stream ever errors or the reader's lock is released before the stream finishes closing.\n         */\n        get closed() {\n            if (!IsReadableStreamDefaultReader(this)) {\n                return promiseRejectedWith(defaultReaderBrandCheckException('closed'));\n            }\n            return this._closedPromise;\n        }\n        /**\n         * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n         */\n        cancel(reason = undefined) {\n            if (!IsReadableStreamDefaultReader(this)) {\n                return promiseRejectedWith(defaultReaderBrandCheckException('cancel'));\n            }\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('cancel'));\n            }\n            return ReadableStreamReaderGenericCancel(this, reason);\n        }\n        /**\n         * Returns a promise that allows access to the next chunk from the stream's internal queue, if available.\n         *\n         * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.\n         */\n        read() {\n            if (!IsReadableStreamDefaultReader(this)) {\n                return promiseRejectedWith(defaultReaderBrandCheckException('read'));\n            }\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('read from'));\n            }\n            let resolvePromise;\n            let rejectPromise;\n            const promise = newPromise((resolve, reject) => {\n                resolvePromise = resolve;\n                rejectPromise = reject;\n            });\n            const readRequest = {\n                _chunkSteps: chunk => resolvePromise({ value: chunk, done: false }),\n                _closeSteps: () => resolvePromise({ value: undefined, done: true }),\n                _errorSteps: e => rejectPromise(e)\n            };\n            ReadableStreamDefaultReaderRead(this, readRequest);\n            return promise;\n        }\n        /**\n         * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n         * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n         * from now on; otherwise, the reader will appear closed.\n         *\n         * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n         * the reader's {@link ReadableStreamDefaultReader.read | read()} method has not yet been settled. Attempting to\n         * do so will throw a `TypeError` and leave the reader locked to the stream.\n         */\n        releaseLock() {\n            if (!IsReadableStreamDefaultReader(this)) {\n                throw defaultReaderBrandCheckException('releaseLock');\n            }\n            if (this._ownerReadableStream === undefined) {\n                return;\n            }\n            if (this._readRequests.length > 0) {\n                throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n            }\n            ReadableStreamReaderGenericRelease(this);\n        }\n    }\n    Object.defineProperties(ReadableStreamDefaultReader.prototype, {\n        cancel: { enumerable: true },\n        read: { enumerable: true },\n        releaseLock: { enumerable: true },\n        closed: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamDefaultReader.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableStreamDefaultReader',\n            configurable: true\n        });\n    }\n    // Abstract operations for the readers.\n    function IsReadableStreamDefaultReader(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n            return false;\n        }\n        return x instanceof ReadableStreamDefaultReader;\n    }\n    function ReadableStreamDefaultReaderRead(reader, readRequest) {\n        const stream = reader._ownerReadableStream;\n        stream._disturbed = true;\n        if (stream._state === 'closed') {\n            readRequest._closeSteps();\n        }\n        else if (stream._state === 'errored') {\n            readRequest._errorSteps(stream._storedError);\n        }\n        else {\n            stream._readableStreamController[PullSteps](readRequest);\n        }\n    }\n    // Helper functions for the ReadableStreamDefaultReader.\n    function defaultReaderBrandCheckException(name) {\n        return new TypeError(`ReadableStreamDefaultReader.prototype.${name} can only be used on a ReadableStreamDefaultReader`);\n    }\n\n    /// <reference lib=\"es2018.asynciterable\" />\n    /* eslint-disable @typescript-eslint/no-empty-function */\n    const AsyncIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf(async function* () { }).prototype);\n\n    /// <reference lib=\"es2018.asynciterable\" />\n    class ReadableStreamAsyncIteratorImpl {\n        constructor(reader, preventCancel) {\n            this._ongoingPromise = undefined;\n            this._isFinished = false;\n            this._reader = reader;\n            this._preventCancel = preventCancel;\n        }\n        next() {\n            const nextSteps = () => this._nextSteps();\n            this._ongoingPromise = this._ongoingPromise ?\n                transformPromiseWith(this._ongoingPromise, nextSteps, nextSteps) :\n                nextSteps();\n            return this._ongoingPromise;\n        }\n        return(value) {\n            const returnSteps = () => this._returnSteps(value);\n            return this._ongoingPromise ?\n                transformPromiseWith(this._ongoingPromise, returnSteps, returnSteps) :\n                returnSteps();\n        }\n        _nextSteps() {\n            if (this._isFinished) {\n                return Promise.resolve({ value: undefined, done: true });\n            }\n            const reader = this._reader;\n            if (reader._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('iterate'));\n            }\n            let resolvePromise;\n            let rejectPromise;\n            const promise = newPromise((resolve, reject) => {\n                resolvePromise = resolve;\n                rejectPromise = reject;\n            });\n            const readRequest = {\n                _chunkSteps: chunk => {\n                    this._ongoingPromise = undefined;\n                    // This needs to be delayed by one microtask, otherwise we stop pulling too early which breaks a test.\n                    // FIXME Is this a bug in the specification, or in the test?\n                    queueMicrotask(() => resolvePromise({ value: chunk, done: false }));\n                },\n                _closeSteps: () => {\n                    this._ongoingPromise = undefined;\n                    this._isFinished = true;\n                    ReadableStreamReaderGenericRelease(reader);\n                    resolvePromise({ value: undefined, done: true });\n                },\n                _errorSteps: reason => {\n                    this._ongoingPromise = undefined;\n                    this._isFinished = true;\n                    ReadableStreamReaderGenericRelease(reader);\n                    rejectPromise(reason);\n                }\n            };\n            ReadableStreamDefaultReaderRead(reader, readRequest);\n            return promise;\n        }\n        _returnSteps(value) {\n            if (this._isFinished) {\n                return Promise.resolve({ value, done: true });\n            }\n            this._isFinished = true;\n            const reader = this._reader;\n            if (reader._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('finish iterating'));\n            }\n            if (!this._preventCancel) {\n                const result = ReadableStreamReaderGenericCancel(reader, value);\n                ReadableStreamReaderGenericRelease(reader);\n                return transformPromiseWith(result, () => ({ value, done: true }));\n            }\n            ReadableStreamReaderGenericRelease(reader);\n            return promiseResolvedWith({ value, done: true });\n        }\n    }\n    const ReadableStreamAsyncIteratorPrototype = {\n        next() {\n            if (!IsReadableStreamAsyncIterator(this)) {\n                return promiseRejectedWith(streamAsyncIteratorBrandCheckException('next'));\n            }\n            return this._asyncIteratorImpl.next();\n        },\n        return(value) {\n            if (!IsReadableStreamAsyncIterator(this)) {\n                return promiseRejectedWith(streamAsyncIteratorBrandCheckException('return'));\n            }\n            return this._asyncIteratorImpl.return(value);\n        }\n    };\n    if (AsyncIteratorPrototype !== undefined) {\n        Object.setPrototypeOf(ReadableStreamAsyncIteratorPrototype, AsyncIteratorPrototype);\n    }\n    // Abstract operations for the ReadableStream.\n    function AcquireReadableStreamAsyncIterator(stream, preventCancel) {\n        const reader = AcquireReadableStreamDefaultReader(stream);\n        const impl = new ReadableStreamAsyncIteratorImpl(reader, preventCancel);\n        const iterator = Object.create(ReadableStreamAsyncIteratorPrototype);\n        iterator._asyncIteratorImpl = impl;\n        return iterator;\n    }\n    function IsReadableStreamAsyncIterator(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_asyncIteratorImpl')) {\n            return false;\n        }\n        try {\n            // noinspection SuspiciousTypeOfGuard\n            return x._asyncIteratorImpl instanceof\n                ReadableStreamAsyncIteratorImpl;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n    // Helper functions for the ReadableStream.\n    function streamAsyncIteratorBrandCheckException(name) {\n        return new TypeError(`ReadableStreamAsyncIterator.${name} can only be used on a ReadableSteamAsyncIterator`);\n    }\n\n    /// <reference lib=\"es2015.core\" />\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN#Polyfill\n    const NumberIsNaN = Number.isNaN || function (x) {\n        // eslint-disable-next-line no-self-compare\n        return x !== x;\n    };\n\n    function CreateArrayFromList(elements) {\n        // We use arrays to represent lists, so this is basically a no-op.\n        // Do a slice though just in case we happen to depend on the unique-ness.\n        return elements.slice();\n    }\n    function CopyDataBlockBytes(dest, destOffset, src, srcOffset, n) {\n        new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\n    }\n    // Not implemented correctly\n    function TransferArrayBuffer(O) {\n        return O;\n    }\n    // Not implemented correctly\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    function IsDetachedBuffer(O) {\n        return false;\n    }\n    function ArrayBufferSlice(buffer, begin, end) {\n        // ArrayBuffer.prototype.slice is not available on IE10\n        // https://www.caniuse.com/mdn-javascript_builtins_arraybuffer_slice\n        if (buffer.slice) {\n            return buffer.slice(begin, end);\n        }\n        const length = end - begin;\n        const slice = new ArrayBuffer(length);\n        CopyDataBlockBytes(slice, 0, buffer, begin, length);\n        return slice;\n    }\n\n    function IsNonNegativeNumber(v) {\n        if (typeof v !== 'number') {\n            return false;\n        }\n        if (NumberIsNaN(v)) {\n            return false;\n        }\n        if (v < 0) {\n            return false;\n        }\n        return true;\n    }\n    function CloneAsUint8Array(O) {\n        const buffer = ArrayBufferSlice(O.buffer, O.byteOffset, O.byteOffset + O.byteLength);\n        return new Uint8Array(buffer);\n    }\n\n    function DequeueValue(container) {\n        const pair = container._queue.shift();\n        container._queueTotalSize -= pair.size;\n        if (container._queueTotalSize < 0) {\n            container._queueTotalSize = 0;\n        }\n        return pair.value;\n    }\n    function EnqueueValueWithSize(container, value, size) {\n        if (!IsNonNegativeNumber(size) || size === Infinity) {\n            throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n        }\n        container._queue.push({ value, size });\n        container._queueTotalSize += size;\n    }\n    function PeekQueueValue(container) {\n        const pair = container._queue.peek();\n        return pair.value;\n    }\n    function ResetQueue(container) {\n        container._queue = new SimpleQueue();\n        container._queueTotalSize = 0;\n    }\n\n    /**\n     * A pull-into request in a {@link ReadableByteStreamController}.\n     *\n     * @public\n     */\n    class ReadableStreamBYOBRequest {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * Returns the view for writing in to, or `null` if the BYOB request has already been responded to.\n         */\n        get view() {\n            if (!IsReadableStreamBYOBRequest(this)) {\n                throw byobRequestBrandCheckException('view');\n            }\n            return this._view;\n        }\n        respond(bytesWritten) {\n            if (!IsReadableStreamBYOBRequest(this)) {\n                throw byobRequestBrandCheckException('respond');\n            }\n            assertRequiredArgument(bytesWritten, 1, 'respond');\n            bytesWritten = convertUnsignedLongLongWithEnforceRange(bytesWritten, 'First parameter');\n            if (this._associatedReadableByteStreamController === undefined) {\n                throw new TypeError('This BYOB request has been invalidated');\n            }\n            if (IsDetachedBuffer(this._view.buffer)) ;\n            ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n        }\n        respondWithNewView(view) {\n            if (!IsReadableStreamBYOBRequest(this)) {\n                throw byobRequestBrandCheckException('respondWithNewView');\n            }\n            assertRequiredArgument(view, 1, 'respondWithNewView');\n            if (!ArrayBuffer.isView(view)) {\n                throw new TypeError('You can only respond with array buffer views');\n            }\n            if (this._associatedReadableByteStreamController === undefined) {\n                throw new TypeError('This BYOB request has been invalidated');\n            }\n            if (IsDetachedBuffer(view.buffer)) ;\n            ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n        }\n    }\n    Object.defineProperties(ReadableStreamBYOBRequest.prototype, {\n        respond: { enumerable: true },\n        respondWithNewView: { enumerable: true },\n        view: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamBYOBRequest.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableStreamBYOBRequest',\n            configurable: true\n        });\n    }\n    /**\n     * Allows control of a {@link ReadableStream | readable byte stream}'s state and internal queue.\n     *\n     * @public\n     */\n    class ReadableByteStreamController {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * Returns the current BYOB pull request, or `null` if there isn't one.\n         */\n        get byobRequest() {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('byobRequest');\n            }\n            return ReadableByteStreamControllerGetBYOBRequest(this);\n        }\n        /**\n         * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n         * over-full. An underlying byte source ought to use this information to determine when and how to apply backpressure.\n         */\n        get desiredSize() {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('desiredSize');\n            }\n            return ReadableByteStreamControllerGetDesiredSize(this);\n        }\n        /**\n         * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n         * the stream, but once those are read, the stream will become closed.\n         */\n        close() {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('close');\n            }\n            if (this._closeRequested) {\n                throw new TypeError('The stream has already been closed; do not close it again!');\n            }\n            const state = this._controlledReadableByteStream._state;\n            if (state !== 'readable') {\n                throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be closed`);\n            }\n            ReadableByteStreamControllerClose(this);\n        }\n        enqueue(chunk) {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('enqueue');\n            }\n            assertRequiredArgument(chunk, 1, 'enqueue');\n            if (!ArrayBuffer.isView(chunk)) {\n                throw new TypeError('chunk must be an array buffer view');\n            }\n            if (chunk.byteLength === 0) {\n                throw new TypeError('chunk must have non-zero byteLength');\n            }\n            if (chunk.buffer.byteLength === 0) {\n                throw new TypeError(`chunk's buffer must have non-zero byteLength`);\n            }\n            if (this._closeRequested) {\n                throw new TypeError('stream is closed or draining');\n            }\n            const state = this._controlledReadableByteStream._state;\n            if (state !== 'readable') {\n                throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be enqueued to`);\n            }\n            ReadableByteStreamControllerEnqueue(this, chunk);\n        }\n        /**\n         * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n         */\n        error(e = undefined) {\n            if (!IsReadableByteStreamController(this)) {\n                throw byteStreamControllerBrandCheckException('error');\n            }\n            ReadableByteStreamControllerError(this, e);\n        }\n        /** @internal */\n        [CancelSteps](reason) {\n            ReadableByteStreamControllerClearPendingPullIntos(this);\n            ResetQueue(this);\n            const result = this._cancelAlgorithm(reason);\n            ReadableByteStreamControllerClearAlgorithms(this);\n            return result;\n        }\n        /** @internal */\n        [PullSteps](readRequest) {\n            const stream = this._controlledReadableByteStream;\n            if (this._queueTotalSize > 0) {\n                const entry = this._queue.shift();\n                this._queueTotalSize -= entry.byteLength;\n                ReadableByteStreamControllerHandleQueueDrain(this);\n                const view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n                readRequest._chunkSteps(view);\n                return;\n            }\n            const autoAllocateChunkSize = this._autoAllocateChunkSize;\n            if (autoAllocateChunkSize !== undefined) {\n                let buffer;\n                try {\n                    buffer = new ArrayBuffer(autoAllocateChunkSize);\n                }\n                catch (bufferE) {\n                    readRequest._errorSteps(bufferE);\n                    return;\n                }\n                const pullIntoDescriptor = {\n                    buffer,\n                    bufferByteLength: autoAllocateChunkSize,\n                    byteOffset: 0,\n                    byteLength: autoAllocateChunkSize,\n                    bytesFilled: 0,\n                    elementSize: 1,\n                    viewConstructor: Uint8Array,\n                    readerType: 'default'\n                };\n                this._pendingPullIntos.push(pullIntoDescriptor);\n            }\n            ReadableStreamAddReadRequest(stream, readRequest);\n            ReadableByteStreamControllerCallPullIfNeeded(this);\n        }\n    }\n    Object.defineProperties(ReadableByteStreamController.prototype, {\n        close: { enumerable: true },\n        enqueue: { enumerable: true },\n        error: { enumerable: true },\n        byobRequest: { enumerable: true },\n        desiredSize: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableByteStreamController.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableByteStreamController',\n            configurable: true\n        });\n    }\n    // Abstract operations for the ReadableByteStreamController.\n    function IsReadableByteStreamController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableByteStream')) {\n            return false;\n        }\n        return x instanceof ReadableByteStreamController;\n    }\n    function IsReadableStreamBYOBRequest(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n            return false;\n        }\n        return x instanceof ReadableStreamBYOBRequest;\n    }\n    function ReadableByteStreamControllerCallPullIfNeeded(controller) {\n        const shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n        if (!shouldPull) {\n            return;\n        }\n        if (controller._pulling) {\n            controller._pullAgain = true;\n            return;\n        }\n        controller._pulling = true;\n        // TODO: Test controller argument\n        const pullPromise = controller._pullAlgorithm();\n        uponPromise(pullPromise, () => {\n            controller._pulling = false;\n            if (controller._pullAgain) {\n                controller._pullAgain = false;\n                ReadableByteStreamControllerCallPullIfNeeded(controller);\n            }\n        }, e => {\n            ReadableByteStreamControllerError(controller, e);\n        });\n    }\n    function ReadableByteStreamControllerClearPendingPullIntos(controller) {\n        ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n        controller._pendingPullIntos = new SimpleQueue();\n    }\n    function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {\n        let done = false;\n        if (stream._state === 'closed') {\n            done = true;\n        }\n        const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n        if (pullIntoDescriptor.readerType === 'default') {\n            ReadableStreamFulfillReadRequest(stream, filledView, done);\n        }\n        else {\n            ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n        }\n    }\n    function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {\n        const bytesFilled = pullIntoDescriptor.bytesFilled;\n        const elementSize = pullIntoDescriptor.elementSize;\n        return new pullIntoDescriptor.viewConstructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);\n    }\n    function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {\n        controller._queue.push({ buffer, byteOffset, byteLength });\n        controller._queueTotalSize += byteLength;\n    }\n    function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {\n        const elementSize = pullIntoDescriptor.elementSize;\n        const currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\n        const maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n        const maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n        const maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\n        let totalBytesToCopyRemaining = maxBytesToCopy;\n        let ready = false;\n        if (maxAlignedBytes > currentAlignedBytes) {\n            totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n            ready = true;\n        }\n        const queue = controller._queue;\n        while (totalBytesToCopyRemaining > 0) {\n            const headOfQueue = queue.peek();\n            const bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n            const destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n            CopyDataBlockBytes(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n            if (headOfQueue.byteLength === bytesToCopy) {\n                queue.shift();\n            }\n            else {\n                headOfQueue.byteOffset += bytesToCopy;\n                headOfQueue.byteLength -= bytesToCopy;\n            }\n            controller._queueTotalSize -= bytesToCopy;\n            ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n            totalBytesToCopyRemaining -= bytesToCopy;\n        }\n        return ready;\n    }\n    function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {\n        pullIntoDescriptor.bytesFilled += size;\n    }\n    function ReadableByteStreamControllerHandleQueueDrain(controller) {\n        if (controller._queueTotalSize === 0 && controller._closeRequested) {\n            ReadableByteStreamControllerClearAlgorithms(controller);\n            ReadableStreamClose(controller._controlledReadableByteStream);\n        }\n        else {\n            ReadableByteStreamControllerCallPullIfNeeded(controller);\n        }\n    }\n    function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {\n        if (controller._byobRequest === null) {\n            return;\n        }\n        controller._byobRequest._associatedReadableByteStreamController = undefined;\n        controller._byobRequest._view = null;\n        controller._byobRequest = null;\n    }\n    function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {\n        while (controller._pendingPullIntos.length > 0) {\n            if (controller._queueTotalSize === 0) {\n                return;\n            }\n            const pullIntoDescriptor = controller._pendingPullIntos.peek();\n            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n                ReadableByteStreamControllerShiftPendingPullInto(controller);\n                ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n            }\n        }\n    }\n    function ReadableByteStreamControllerPullInto(controller, view, readIntoRequest) {\n        const stream = controller._controlledReadableByteStream;\n        let elementSize = 1;\n        if (view.constructor !== DataView) {\n            elementSize = view.constructor.BYTES_PER_ELEMENT;\n        }\n        const ctor = view.constructor;\n        // try {\n        const buffer = TransferArrayBuffer(view.buffer);\n        // } catch (e) {\n        //   readIntoRequest._errorSteps(e);\n        //   return;\n        // }\n        const pullIntoDescriptor = {\n            buffer,\n            bufferByteLength: buffer.byteLength,\n            byteOffset: view.byteOffset,\n            byteLength: view.byteLength,\n            bytesFilled: 0,\n            elementSize,\n            viewConstructor: ctor,\n            readerType: 'byob'\n        };\n        if (controller._pendingPullIntos.length > 0) {\n            controller._pendingPullIntos.push(pullIntoDescriptor);\n            // No ReadableByteStreamControllerCallPullIfNeeded() call since:\n            // - No change happens on desiredSize\n            // - The source has already been notified of that there's at least 1 pending read(view)\n            ReadableStreamAddReadIntoRequest(stream, readIntoRequest);\n            return;\n        }\n        if (stream._state === 'closed') {\n            const emptyView = new ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n            readIntoRequest._closeSteps(emptyView);\n            return;\n        }\n        if (controller._queueTotalSize > 0) {\n            if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n                const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n                ReadableByteStreamControllerHandleQueueDrain(controller);\n                readIntoRequest._chunkSteps(filledView);\n                return;\n            }\n            if (controller._closeRequested) {\n                const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n                ReadableByteStreamControllerError(controller, e);\n                readIntoRequest._errorSteps(e);\n                return;\n            }\n        }\n        controller._pendingPullIntos.push(pullIntoDescriptor);\n        ReadableStreamAddReadIntoRequest(stream, readIntoRequest);\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n    function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {\n        const stream = controller._controlledReadableByteStream;\n        if (ReadableStreamHasBYOBReader(stream)) {\n            while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n                const pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n                ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n            }\n        }\n    }\n    function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {\n        ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n        if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\n            return;\n        }\n        ReadableByteStreamControllerShiftPendingPullInto(controller);\n        const remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n        if (remainderSize > 0) {\n            const end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n            const remainder = ArrayBufferSlice(pullIntoDescriptor.buffer, end - remainderSize, end);\n            ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\n        }\n        pullIntoDescriptor.bytesFilled -= remainderSize;\n        ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n        ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n    }\n    function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {\n        const firstDescriptor = controller._pendingPullIntos.peek();\n        ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n        const state = controller._controlledReadableByteStream._state;\n        if (state === 'closed') {\n            ReadableByteStreamControllerRespondInClosedState(controller);\n        }\n        else {\n            ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n        }\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n    function ReadableByteStreamControllerShiftPendingPullInto(controller) {\n        const descriptor = controller._pendingPullIntos.shift();\n        return descriptor;\n    }\n    function ReadableByteStreamControllerShouldCallPull(controller) {\n        const stream = controller._controlledReadableByteStream;\n        if (stream._state !== 'readable') {\n            return false;\n        }\n        if (controller._closeRequested) {\n            return false;\n        }\n        if (!controller._started) {\n            return false;\n        }\n        if (ReadableStreamHasDefaultReader(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n            return true;\n        }\n        if (ReadableStreamHasBYOBReader(stream) && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n            return true;\n        }\n        const desiredSize = ReadableByteStreamControllerGetDesiredSize(controller);\n        if (desiredSize > 0) {\n            return true;\n        }\n        return false;\n    }\n    function ReadableByteStreamControllerClearAlgorithms(controller) {\n        controller._pullAlgorithm = undefined;\n        controller._cancelAlgorithm = undefined;\n    }\n    // A client of ReadableByteStreamController may use these functions directly to bypass state check.\n    function ReadableByteStreamControllerClose(controller) {\n        const stream = controller._controlledReadableByteStream;\n        if (controller._closeRequested || stream._state !== 'readable') {\n            return;\n        }\n        if (controller._queueTotalSize > 0) {\n            controller._closeRequested = true;\n            return;\n        }\n        if (controller._pendingPullIntos.length > 0) {\n            const firstPendingPullInto = controller._pendingPullIntos.peek();\n            if (firstPendingPullInto.bytesFilled > 0) {\n                const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n                ReadableByteStreamControllerError(controller, e);\n                throw e;\n            }\n        }\n        ReadableByteStreamControllerClearAlgorithms(controller);\n        ReadableStreamClose(stream);\n    }\n    function ReadableByteStreamControllerEnqueue(controller, chunk) {\n        const stream = controller._controlledReadableByteStream;\n        if (controller._closeRequested || stream._state !== 'readable') {\n            return;\n        }\n        const buffer = chunk.buffer;\n        const byteOffset = chunk.byteOffset;\n        const byteLength = chunk.byteLength;\n        const transferredBuffer = TransferArrayBuffer(buffer);\n        if (controller._pendingPullIntos.length > 0) {\n            const firstPendingPullInto = controller._pendingPullIntos.peek();\n            if (IsDetachedBuffer(firstPendingPullInto.buffer)) ;\n            firstPendingPullInto.buffer = TransferArrayBuffer(firstPendingPullInto.buffer);\n        }\n        ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n        if (ReadableStreamHasDefaultReader(stream)) {\n            if (ReadableStreamGetNumReadRequests(stream) === 0) {\n                ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n            }\n            else {\n                if (controller._pendingPullIntos.length > 0) {\n                    ReadableByteStreamControllerShiftPendingPullInto(controller);\n                }\n                const transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n                ReadableStreamFulfillReadRequest(stream, transferredView, false);\n            }\n        }\n        else if (ReadableStreamHasBYOBReader(stream)) {\n            // TODO: Ideally in this branch detaching should happen only if the buffer is not consumed fully.\n            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n            ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n        }\n        else {\n            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n        }\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n    function ReadableByteStreamControllerError(controller, e) {\n        const stream = controller._controlledReadableByteStream;\n        if (stream._state !== 'readable') {\n            return;\n        }\n        ReadableByteStreamControllerClearPendingPullIntos(controller);\n        ResetQueue(controller);\n        ReadableByteStreamControllerClearAlgorithms(controller);\n        ReadableStreamError(stream, e);\n    }\n    function ReadableByteStreamControllerGetBYOBRequest(controller) {\n        if (controller._byobRequest === null && controller._pendingPullIntos.length > 0) {\n            const firstDescriptor = controller._pendingPullIntos.peek();\n            const view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n            const byobRequest = Object.create(ReadableStreamBYOBRequest.prototype);\n            SetUpReadableStreamBYOBRequest(byobRequest, controller, view);\n            controller._byobRequest = byobRequest;\n        }\n        return controller._byobRequest;\n    }\n    function ReadableByteStreamControllerGetDesiredSize(controller) {\n        const state = controller._controlledReadableByteStream._state;\n        if (state === 'errored') {\n            return null;\n        }\n        if (state === 'closed') {\n            return 0;\n        }\n        return controller._strategyHWM - controller._queueTotalSize;\n    }\n    function ReadableByteStreamControllerRespond(controller, bytesWritten) {\n        const firstDescriptor = controller._pendingPullIntos.peek();\n        const state = controller._controlledReadableByteStream._state;\n        if (state === 'closed') {\n            if (bytesWritten !== 0) {\n                throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n            }\n        }\n        else {\n            if (bytesWritten === 0) {\n                throw new TypeError('bytesWritten must be greater than 0 when calling respond() on a readable stream');\n            }\n            if (firstDescriptor.bytesFilled + bytesWritten > firstDescriptor.byteLength) {\n                throw new RangeError('bytesWritten out of range');\n            }\n        }\n        firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n        ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n    }\n    function ReadableByteStreamControllerRespondWithNewView(controller, view) {\n        const firstDescriptor = controller._pendingPullIntos.peek();\n        const state = controller._controlledReadableByteStream._state;\n        if (state === 'closed') {\n            if (view.byteLength !== 0) {\n                throw new TypeError('The view\\'s length must be 0 when calling respondWithNewView() on a closed stream');\n            }\n        }\n        else {\n            if (view.byteLength === 0) {\n                throw new TypeError('The view\\'s length must be greater than 0 when calling respondWithNewView() on a readable stream');\n            }\n        }\n        if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n            throw new RangeError('The region specified by view does not match byobRequest');\n        }\n        if (firstDescriptor.bufferByteLength !== view.buffer.byteLength) {\n            throw new RangeError('The buffer of view has different capacity than byobRequest');\n        }\n        if (firstDescriptor.bytesFilled + view.byteLength > firstDescriptor.byteLength) {\n            throw new RangeError('The region specified by view is larger than byobRequest');\n        }\n        const viewByteLength = view.byteLength;\n        firstDescriptor.buffer = TransferArrayBuffer(view.buffer);\n        ReadableByteStreamControllerRespondInternal(controller, viewByteLength);\n    }\n    function SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize) {\n        controller._controlledReadableByteStream = stream;\n        controller._pullAgain = false;\n        controller._pulling = false;\n        controller._byobRequest = null;\n        // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n        controller._queue = controller._queueTotalSize = undefined;\n        ResetQueue(controller);\n        controller._closeRequested = false;\n        controller._started = false;\n        controller._strategyHWM = highWaterMark;\n        controller._pullAlgorithm = pullAlgorithm;\n        controller._cancelAlgorithm = cancelAlgorithm;\n        controller._autoAllocateChunkSize = autoAllocateChunkSize;\n        controller._pendingPullIntos = new SimpleQueue();\n        stream._readableStreamController = controller;\n        const startResult = startAlgorithm();\n        uponPromise(promiseResolvedWith(startResult), () => {\n            controller._started = true;\n            ReadableByteStreamControllerCallPullIfNeeded(controller);\n        }, r => {\n            ReadableByteStreamControllerError(controller, r);\n        });\n    }\n    function SetUpReadableByteStreamControllerFromUnderlyingSource(stream, underlyingByteSource, highWaterMark) {\n        const controller = Object.create(ReadableByteStreamController.prototype);\n        let startAlgorithm = () => undefined;\n        let pullAlgorithm = () => promiseResolvedWith(undefined);\n        let cancelAlgorithm = () => promiseResolvedWith(undefined);\n        if (underlyingByteSource.start !== undefined) {\n            startAlgorithm = () => underlyingByteSource.start(controller);\n        }\n        if (underlyingByteSource.pull !== undefined) {\n            pullAlgorithm = () => underlyingByteSource.pull(controller);\n        }\n        if (underlyingByteSource.cancel !== undefined) {\n            cancelAlgorithm = reason => underlyingByteSource.cancel(reason);\n        }\n        const autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n        if (autoAllocateChunkSize === 0) {\n            throw new TypeError('autoAllocateChunkSize must be greater than 0');\n        }\n        SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize);\n    }\n    function SetUpReadableStreamBYOBRequest(request, controller, view) {\n        request._associatedReadableByteStreamController = controller;\n        request._view = view;\n    }\n    // Helper functions for the ReadableStreamBYOBRequest.\n    function byobRequestBrandCheckException(name) {\n        return new TypeError(`ReadableStreamBYOBRequest.prototype.${name} can only be used on a ReadableStreamBYOBRequest`);\n    }\n    // Helper functions for the ReadableByteStreamController.\n    function byteStreamControllerBrandCheckException(name) {\n        return new TypeError(`ReadableByteStreamController.prototype.${name} can only be used on a ReadableByteStreamController`);\n    }\n\n    // Abstract operations for the ReadableStream.\n    function AcquireReadableStreamBYOBReader(stream) {\n        return new ReadableStreamBYOBReader(stream);\n    }\n    // ReadableStream API exposed for controllers.\n    function ReadableStreamAddReadIntoRequest(stream, readIntoRequest) {\n        stream._reader._readIntoRequests.push(readIntoRequest);\n    }\n    function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {\n        const reader = stream._reader;\n        const readIntoRequest = reader._readIntoRequests.shift();\n        if (done) {\n            readIntoRequest._closeSteps(chunk);\n        }\n        else {\n            readIntoRequest._chunkSteps(chunk);\n        }\n    }\n    function ReadableStreamGetNumReadIntoRequests(stream) {\n        return stream._reader._readIntoRequests.length;\n    }\n    function ReadableStreamHasBYOBReader(stream) {\n        const reader = stream._reader;\n        if (reader === undefined) {\n            return false;\n        }\n        if (!IsReadableStreamBYOBReader(reader)) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A BYOB reader vended by a {@link ReadableStream}.\n     *\n     * @public\n     */\n    class ReadableStreamBYOBReader {\n        constructor(stream) {\n            assertRequiredArgument(stream, 1, 'ReadableStreamBYOBReader');\n            assertReadableStream(stream, 'First parameter');\n            if (IsReadableStreamLocked(stream)) {\n                throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n            }\n            if (!IsReadableByteStreamController(stream._readableStreamController)) {\n                throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' +\n                    'source');\n            }\n            ReadableStreamReaderGenericInitialize(this, stream);\n            this._readIntoRequests = new SimpleQueue();\n        }\n        /**\n         * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n         * the reader's lock is released before the stream finishes closing.\n         */\n        get closed() {\n            if (!IsReadableStreamBYOBReader(this)) {\n                return promiseRejectedWith(byobReaderBrandCheckException('closed'));\n            }\n            return this._closedPromise;\n        }\n        /**\n         * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n         */\n        cancel(reason = undefined) {\n            if (!IsReadableStreamBYOBReader(this)) {\n                return promiseRejectedWith(byobReaderBrandCheckException('cancel'));\n            }\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('cancel'));\n            }\n            return ReadableStreamReaderGenericCancel(this, reason);\n        }\n        /**\n         * Attempts to reads bytes into view, and returns a promise resolved with the result.\n         *\n         * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.\n         */\n        read(view) {\n            if (!IsReadableStreamBYOBReader(this)) {\n                return promiseRejectedWith(byobReaderBrandCheckException('read'));\n            }\n            if (!ArrayBuffer.isView(view)) {\n                return promiseRejectedWith(new TypeError('view must be an array buffer view'));\n            }\n            if (view.byteLength === 0) {\n                return promiseRejectedWith(new TypeError('view must have non-zero byteLength'));\n            }\n            if (view.buffer.byteLength === 0) {\n                return promiseRejectedWith(new TypeError(`view's buffer must have non-zero byteLength`));\n            }\n            if (IsDetachedBuffer(view.buffer)) ;\n            if (this._ownerReadableStream === undefined) {\n                return promiseRejectedWith(readerLockException('read from'));\n            }\n            let resolvePromise;\n            let rejectPromise;\n            const promise = newPromise((resolve, reject) => {\n                resolvePromise = resolve;\n                rejectPromise = reject;\n            });\n            const readIntoRequest = {\n                _chunkSteps: chunk => resolvePromise({ value: chunk, done: false }),\n                _closeSteps: chunk => resolvePromise({ value: chunk, done: true }),\n                _errorSteps: e => rejectPromise(e)\n            };\n            ReadableStreamBYOBReaderRead(this, view, readIntoRequest);\n            return promise;\n        }\n        /**\n         * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n         * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n         * from now on; otherwise, the reader will appear closed.\n         *\n         * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n         * the reader's {@link ReadableStreamBYOBReader.read | read()} method has not yet been settled. Attempting to\n         * do so will throw a `TypeError` and leave the reader locked to the stream.\n         */\n        releaseLock() {\n            if (!IsReadableStreamBYOBReader(this)) {\n                throw byobReaderBrandCheckException('releaseLock');\n            }\n            if (this._ownerReadableStream === undefined) {\n                return;\n            }\n            if (this._readIntoRequests.length > 0) {\n                throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n            }\n            ReadableStreamReaderGenericRelease(this);\n        }\n    }\n    Object.defineProperties(ReadableStreamBYOBReader.prototype, {\n        cancel: { enumerable: true },\n        read: { enumerable: true },\n        releaseLock: { enumerable: true },\n        closed: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamBYOBReader.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableStreamBYOBReader',\n            configurable: true\n        });\n    }\n    // Abstract operations for the readers.\n    function IsReadableStreamBYOBReader(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n            return false;\n        }\n        return x instanceof ReadableStreamBYOBReader;\n    }\n    function ReadableStreamBYOBReaderRead(reader, view, readIntoRequest) {\n        const stream = reader._ownerReadableStream;\n        stream._disturbed = true;\n        if (stream._state === 'errored') {\n            readIntoRequest._errorSteps(stream._storedError);\n        }\n        else {\n            ReadableByteStreamControllerPullInto(stream._readableStreamController, view, readIntoRequest);\n        }\n    }\n    // Helper functions for the ReadableStreamBYOBReader.\n    function byobReaderBrandCheckException(name) {\n        return new TypeError(`ReadableStreamBYOBReader.prototype.${name} can only be used on a ReadableStreamBYOBReader`);\n    }\n\n    function ExtractHighWaterMark(strategy, defaultHWM) {\n        const { highWaterMark } = strategy;\n        if (highWaterMark === undefined) {\n            return defaultHWM;\n        }\n        if (NumberIsNaN(highWaterMark) || highWaterMark < 0) {\n            throw new RangeError('Invalid highWaterMark');\n        }\n        return highWaterMark;\n    }\n    function ExtractSizeAlgorithm(strategy) {\n        const { size } = strategy;\n        if (!size) {\n            return () => 1;\n        }\n        return size;\n    }\n\n    function convertQueuingStrategy(init, context) {\n        assertDictionary(init, context);\n        const highWaterMark = init === null || init === void 0 ? void 0 : init.highWaterMark;\n        const size = init === null || init === void 0 ? void 0 : init.size;\n        return {\n            highWaterMark: highWaterMark === undefined ? undefined : convertUnrestrictedDouble(highWaterMark),\n            size: size === undefined ? undefined : convertQueuingStrategySize(size, `${context} has member 'size' that`)\n        };\n    }\n    function convertQueuingStrategySize(fn, context) {\n        assertFunction(fn, context);\n        return chunk => convertUnrestrictedDouble(fn(chunk));\n    }\n\n    function convertUnderlyingSink(original, context) {\n        assertDictionary(original, context);\n        const abort = original === null || original === void 0 ? void 0 : original.abort;\n        const close = original === null || original === void 0 ? void 0 : original.close;\n        const start = original === null || original === void 0 ? void 0 : original.start;\n        const type = original === null || original === void 0 ? void 0 : original.type;\n        const write = original === null || original === void 0 ? void 0 : original.write;\n        return {\n            abort: abort === undefined ?\n                undefined :\n                convertUnderlyingSinkAbortCallback(abort, original, `${context} has member 'abort' that`),\n            close: close === undefined ?\n                undefined :\n                convertUnderlyingSinkCloseCallback(close, original, `${context} has member 'close' that`),\n            start: start === undefined ?\n                undefined :\n                convertUnderlyingSinkStartCallback(start, original, `${context} has member 'start' that`),\n            write: write === undefined ?\n                undefined :\n                convertUnderlyingSinkWriteCallback(write, original, `${context} has member 'write' that`),\n            type\n        };\n    }\n    function convertUnderlyingSinkAbortCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (reason) => promiseCall(fn, original, [reason]);\n    }\n    function convertUnderlyingSinkCloseCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return () => promiseCall(fn, original, []);\n    }\n    function convertUnderlyingSinkStartCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => reflectCall(fn, original, [controller]);\n    }\n    function convertUnderlyingSinkWriteCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);\n    }\n\n    function assertWritableStream(x, context) {\n        if (!IsWritableStream(x)) {\n            throw new TypeError(`${context} is not a WritableStream.`);\n        }\n    }\n\n    function isAbortSignal(value) {\n        if (typeof value !== 'object' || value === null) {\n            return false;\n        }\n        try {\n            return typeof value.aborted === 'boolean';\n        }\n        catch (_a) {\n            // AbortSignal.prototype.aborted throws if its brand check fails\n            return false;\n        }\n    }\n    const supportsAbortController = typeof AbortController === 'function';\n    /**\n     * Construct a new AbortController, if supported by the platform.\n     *\n     * @internal\n     */\n    function createAbortController() {\n        if (supportsAbortController) {\n            return new AbortController();\n        }\n        return undefined;\n    }\n\n    /**\n     * A writable stream represents a destination for data, into which you can write.\n     *\n     * @public\n     */\n    class WritableStream {\n        constructor(rawUnderlyingSink = {}, rawStrategy = {}) {\n            if (rawUnderlyingSink === undefined) {\n                rawUnderlyingSink = null;\n            }\n            else {\n                assertObject(rawUnderlyingSink, 'First parameter');\n            }\n            const strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n            const underlyingSink = convertUnderlyingSink(rawUnderlyingSink, 'First parameter');\n            InitializeWritableStream(this);\n            const type = underlyingSink.type;\n            if (type !== undefined) {\n                throw new RangeError('Invalid type is specified');\n            }\n            const sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n            const highWaterMark = ExtractHighWaterMark(strategy, 1);\n            SetUpWritableStreamDefaultControllerFromUnderlyingSink(this, underlyingSink, highWaterMark, sizeAlgorithm);\n        }\n        /**\n         * Returns whether or not the writable stream is locked to a writer.\n         */\n        get locked() {\n            if (!IsWritableStream(this)) {\n                throw streamBrandCheckException$2('locked');\n            }\n            return IsWritableStreamLocked(this);\n        }\n        /**\n         * Aborts the stream, signaling that the producer can no longer successfully write to the stream and it is to be\n         * immediately moved to an errored state, with any queued-up writes discarded. This will also execute any abort\n         * mechanism of the underlying sink.\n         *\n         * The returned promise will fulfill if the stream shuts down successfully, or reject if the underlying sink signaled\n         * that there was an error doing so. Additionally, it will reject with a `TypeError` (without attempting to cancel\n         * the stream) if the stream is currently locked.\n         */\n        abort(reason = undefined) {\n            if (!IsWritableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$2('abort'));\n            }\n            if (IsWritableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('Cannot abort a stream that already has a writer'));\n            }\n            return WritableStreamAbort(this, reason);\n        }\n        /**\n         * Closes the stream. The underlying sink will finish processing any previously-written chunks, before invoking its\n         * close behavior. During this time any further attempts to write will fail (without erroring the stream).\n         *\n         * The method returns a promise that will fulfill if all remaining chunks are successfully written and the stream\n         * successfully closes, or rejects if an error is encountered during this process. Additionally, it will reject with\n         * a `TypeError` (without attempting to cancel the stream) if the stream is currently locked.\n         */\n        close() {\n            if (!IsWritableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$2('close'));\n            }\n            if (IsWritableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('Cannot close a stream that already has a writer'));\n            }\n            if (WritableStreamCloseQueuedOrInFlight(this)) {\n                return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n            }\n            return WritableStreamClose(this);\n        }\n        /**\n         * Creates a {@link WritableStreamDefaultWriter | writer} and locks the stream to the new writer. While the stream\n         * is locked, no other writer can be acquired until this one is released.\n         *\n         * This functionality is especially useful for creating abstractions that desire the ability to write to a stream\n         * without interruption or interleaving. By getting a writer for the stream, you can ensure nobody else can write at\n         * the same time, which would cause the resulting written data to be unpredictable and probably useless.\n         */\n        getWriter() {\n            if (!IsWritableStream(this)) {\n                throw streamBrandCheckException$2('getWriter');\n            }\n            return AcquireWritableStreamDefaultWriter(this);\n        }\n    }\n    Object.defineProperties(WritableStream.prototype, {\n        abort: { enumerable: true },\n        close: { enumerable: true },\n        getWriter: { enumerable: true },\n        locked: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(WritableStream.prototype, SymbolPolyfill.toStringTag, {\n            value: 'WritableStream',\n            configurable: true\n        });\n    }\n    // Abstract operations for the WritableStream.\n    function AcquireWritableStreamDefaultWriter(stream) {\n        return new WritableStreamDefaultWriter(stream);\n    }\n    // Throws if and only if startAlgorithm throws.\n    function CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {\n        const stream = Object.create(WritableStream.prototype);\n        InitializeWritableStream(stream);\n        const controller = Object.create(WritableStreamDefaultController.prototype);\n        SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);\n        return stream;\n    }\n    function InitializeWritableStream(stream) {\n        stream._state = 'writable';\n        // The error that will be reported by new method calls once the state becomes errored. Only set when [[state]] is\n        // 'erroring' or 'errored'. May be set to an undefined value.\n        stream._storedError = undefined;\n        stream._writer = undefined;\n        // Initialize to undefined first because the constructor of the controller checks this\n        // variable to validate the caller.\n        stream._writableStreamController = undefined;\n        // This queue is placed here instead of the writer class in order to allow for passing a writer to the next data\n        // producer without waiting for the queued writes to finish.\n        stream._writeRequests = new SimpleQueue();\n        // Write requests are removed from _writeRequests when write() is called on the underlying sink. This prevents\n        // them from being erroneously rejected on error. If a write() call is in-flight, the request is stored here.\n        stream._inFlightWriteRequest = undefined;\n        // The promise that was returned from writer.close(). Stored here because it may be fulfilled after the writer\n        // has been detached.\n        stream._closeRequest = undefined;\n        // Close request is removed from _closeRequest when close() is called on the underlying sink. This prevents it\n        // from being erroneously rejected on error. If a close() call is in-flight, the request is stored here.\n        stream._inFlightCloseRequest = undefined;\n        // The promise that was returned from writer.abort(). This may also be fulfilled after the writer has detached.\n        stream._pendingAbortRequest = undefined;\n        // The backpressure signal set by the controller.\n        stream._backpressure = false;\n    }\n    function IsWritableStream(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n            return false;\n        }\n        return x instanceof WritableStream;\n    }\n    function IsWritableStreamLocked(stream) {\n        if (stream._writer === undefined) {\n            return false;\n        }\n        return true;\n    }\n    function WritableStreamAbort(stream, reason) {\n        var _a;\n        if (stream._state === 'closed' || stream._state === 'errored') {\n            return promiseResolvedWith(undefined);\n        }\n        stream._writableStreamController._abortReason = reason;\n        (_a = stream._writableStreamController._abortController) === null || _a === void 0 ? void 0 : _a.abort();\n        // TypeScript narrows the type of `stream._state` down to 'writable' | 'erroring',\n        // but it doesn't know that signaling abort runs author code that might have changed the state.\n        // Widen the type again by casting to WritableStreamState.\n        const state = stream._state;\n        if (state === 'closed' || state === 'errored') {\n            return promiseResolvedWith(undefined);\n        }\n        if (stream._pendingAbortRequest !== undefined) {\n            return stream._pendingAbortRequest._promise;\n        }\n        let wasAlreadyErroring = false;\n        if (state === 'erroring') {\n            wasAlreadyErroring = true;\n            // reason will not be used, so don't keep a reference to it.\n            reason = undefined;\n        }\n        const promise = newPromise((resolve, reject) => {\n            stream._pendingAbortRequest = {\n                _promise: undefined,\n                _resolve: resolve,\n                _reject: reject,\n                _reason: reason,\n                _wasAlreadyErroring: wasAlreadyErroring\n            };\n        });\n        stream._pendingAbortRequest._promise = promise;\n        if (!wasAlreadyErroring) {\n            WritableStreamStartErroring(stream, reason);\n        }\n        return promise;\n    }\n    function WritableStreamClose(stream) {\n        const state = stream._state;\n        if (state === 'closed' || state === 'errored') {\n            return promiseRejectedWith(new TypeError(`The stream (in ${state} state) is not in the writable state and cannot be closed`));\n        }\n        const promise = newPromise((resolve, reject) => {\n            const closeRequest = {\n                _resolve: resolve,\n                _reject: reject\n            };\n            stream._closeRequest = closeRequest;\n        });\n        const writer = stream._writer;\n        if (writer !== undefined && stream._backpressure && state === 'writable') {\n            defaultWriterReadyPromiseResolve(writer);\n        }\n        WritableStreamDefaultControllerClose(stream._writableStreamController);\n        return promise;\n    }\n    // WritableStream API exposed for controllers.\n    function WritableStreamAddWriteRequest(stream) {\n        const promise = newPromise((resolve, reject) => {\n            const writeRequest = {\n                _resolve: resolve,\n                _reject: reject\n            };\n            stream._writeRequests.push(writeRequest);\n        });\n        return promise;\n    }\n    function WritableStreamDealWithRejection(stream, error) {\n        const state = stream._state;\n        if (state === 'writable') {\n            WritableStreamStartErroring(stream, error);\n            return;\n        }\n        WritableStreamFinishErroring(stream);\n    }\n    function WritableStreamStartErroring(stream, reason) {\n        const controller = stream._writableStreamController;\n        stream._state = 'erroring';\n        stream._storedError = reason;\n        const writer = stream._writer;\n        if (writer !== undefined) {\n            WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n        }\n        if (!WritableStreamHasOperationMarkedInFlight(stream) && controller._started) {\n            WritableStreamFinishErroring(stream);\n        }\n    }\n    function WritableStreamFinishErroring(stream) {\n        stream._state = 'errored';\n        stream._writableStreamController[ErrorSteps]();\n        const storedError = stream._storedError;\n        stream._writeRequests.forEach(writeRequest => {\n            writeRequest._reject(storedError);\n        });\n        stream._writeRequests = new SimpleQueue();\n        if (stream._pendingAbortRequest === undefined) {\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n            return;\n        }\n        const abortRequest = stream._pendingAbortRequest;\n        stream._pendingAbortRequest = undefined;\n        if (abortRequest._wasAlreadyErroring) {\n            abortRequest._reject(storedError);\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n            return;\n        }\n        const promise = stream._writableStreamController[AbortSteps](abortRequest._reason);\n        uponPromise(promise, () => {\n            abortRequest._resolve();\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n        }, (reason) => {\n            abortRequest._reject(reason);\n            WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n        });\n    }\n    function WritableStreamFinishInFlightWrite(stream) {\n        stream._inFlightWriteRequest._resolve(undefined);\n        stream._inFlightWriteRequest = undefined;\n    }\n    function WritableStreamFinishInFlightWriteWithError(stream, error) {\n        stream._inFlightWriteRequest._reject(error);\n        stream._inFlightWriteRequest = undefined;\n        WritableStreamDealWithRejection(stream, error);\n    }\n    function WritableStreamFinishInFlightClose(stream) {\n        stream._inFlightCloseRequest._resolve(undefined);\n        stream._inFlightCloseRequest = undefined;\n        const state = stream._state;\n        if (state === 'erroring') {\n            // The error was too late to do anything, so it is ignored.\n            stream._storedError = undefined;\n            if (stream._pendingAbortRequest !== undefined) {\n                stream._pendingAbortRequest._resolve();\n                stream._pendingAbortRequest = undefined;\n            }\n        }\n        stream._state = 'closed';\n        const writer = stream._writer;\n        if (writer !== undefined) {\n            defaultWriterClosedPromiseResolve(writer);\n        }\n    }\n    function WritableStreamFinishInFlightCloseWithError(stream, error) {\n        stream._inFlightCloseRequest._reject(error);\n        stream._inFlightCloseRequest = undefined;\n        // Never execute sink abort() after sink close().\n        if (stream._pendingAbortRequest !== undefined) {\n            stream._pendingAbortRequest._reject(error);\n            stream._pendingAbortRequest = undefined;\n        }\n        WritableStreamDealWithRejection(stream, error);\n    }\n    // TODO(ricea): Fix alphabetical order.\n    function WritableStreamCloseQueuedOrInFlight(stream) {\n        if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\n            return false;\n        }\n        return true;\n    }\n    function WritableStreamHasOperationMarkedInFlight(stream) {\n        if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\n            return false;\n        }\n        return true;\n    }\n    function WritableStreamMarkCloseRequestInFlight(stream) {\n        stream._inFlightCloseRequest = stream._closeRequest;\n        stream._closeRequest = undefined;\n    }\n    function WritableStreamMarkFirstWriteRequestInFlight(stream) {\n        stream._inFlightWriteRequest = stream._writeRequests.shift();\n    }\n    function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\n        if (stream._closeRequest !== undefined) {\n            stream._closeRequest._reject(stream._storedError);\n            stream._closeRequest = undefined;\n        }\n        const writer = stream._writer;\n        if (writer !== undefined) {\n            defaultWriterClosedPromiseReject(writer, stream._storedError);\n        }\n    }\n    function WritableStreamUpdateBackpressure(stream, backpressure) {\n        const writer = stream._writer;\n        if (writer !== undefined && backpressure !== stream._backpressure) {\n            if (backpressure) {\n                defaultWriterReadyPromiseReset(writer);\n            }\n            else {\n                defaultWriterReadyPromiseResolve(writer);\n            }\n        }\n        stream._backpressure = backpressure;\n    }\n    /**\n     * A default writer vended by a {@link WritableStream}.\n     *\n     * @public\n     */\n    class WritableStreamDefaultWriter {\n        constructor(stream) {\n            assertRequiredArgument(stream, 1, 'WritableStreamDefaultWriter');\n            assertWritableStream(stream, 'First parameter');\n            if (IsWritableStreamLocked(stream)) {\n                throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n            }\n            this._ownerWritableStream = stream;\n            stream._writer = this;\n            const state = stream._state;\n            if (state === 'writable') {\n                if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._backpressure) {\n                    defaultWriterReadyPromiseInitialize(this);\n                }\n                else {\n                    defaultWriterReadyPromiseInitializeAsResolved(this);\n                }\n                defaultWriterClosedPromiseInitialize(this);\n            }\n            else if (state === 'erroring') {\n                defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n                defaultWriterClosedPromiseInitialize(this);\n            }\n            else if (state === 'closed') {\n                defaultWriterReadyPromiseInitializeAsResolved(this);\n                defaultWriterClosedPromiseInitializeAsResolved(this);\n            }\n            else {\n                const storedError = stream._storedError;\n                defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n                defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n            }\n        }\n        /**\n         * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n         * the writerâs lock is released before the stream finishes closing.\n         */\n        get closed() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('closed'));\n            }\n            return this._closedPromise;\n        }\n        /**\n         * Returns the desired size to fill the streamâs internal queue. It can be negative, if the queue is over-full.\n         * A producer can use this information to determine the right amount of data to write.\n         *\n         * It will be `null` if the stream cannot be successfully written to (due to either being errored, or having an abort\n         * queued up). It will return zero if the stream is closed. And the getter will throw an exception if invoked when\n         * the writerâs lock is released.\n         */\n        get desiredSize() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                throw defaultWriterBrandCheckException('desiredSize');\n            }\n            if (this._ownerWritableStream === undefined) {\n                throw defaultWriterLockException('desiredSize');\n            }\n            return WritableStreamDefaultWriterGetDesiredSize(this);\n        }\n        /**\n         * Returns a promise that will be fulfilled when the desired size to fill the streamâs internal queue transitions\n         * from non-positive to positive, signaling that it is no longer applying backpressure. Once the desired size dips\n         * back to zero or below, the getter will return a new promise that stays pending until the next transition.\n         *\n         * If the stream becomes errored or aborted, or the writerâs lock is released, the returned promise will become\n         * rejected.\n         */\n        get ready() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('ready'));\n            }\n            return this._readyPromise;\n        }\n        /**\n         * If the reader is active, behaves the same as {@link WritableStream.abort | stream.abort(reason)}.\n         */\n        abort(reason = undefined) {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('abort'));\n            }\n            if (this._ownerWritableStream === undefined) {\n                return promiseRejectedWith(defaultWriterLockException('abort'));\n            }\n            return WritableStreamDefaultWriterAbort(this, reason);\n        }\n        /**\n         * If the reader is active, behaves the same as {@link WritableStream.close | stream.close()}.\n         */\n        close() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('close'));\n            }\n            const stream = this._ownerWritableStream;\n            if (stream === undefined) {\n                return promiseRejectedWith(defaultWriterLockException('close'));\n            }\n            if (WritableStreamCloseQueuedOrInFlight(stream)) {\n                return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n            }\n            return WritableStreamDefaultWriterClose(this);\n        }\n        /**\n         * Releases the writerâs lock on the corresponding stream. After the lock is released, the writer is no longer active.\n         * If the associated stream is errored when the lock is released, the writer will appear errored in the same way from\n         * now on; otherwise, the writer will appear closed.\n         *\n         * Note that the lock can still be released even if some ongoing writes have not yet finished (i.e. even if the\n         * promises returned from previous calls to {@link WritableStreamDefaultWriter.write | write()} have not yet settled).\n         * Itâs not necessary to hold the lock on the writer for the duration of the write; the lock instead simply prevents\n         * other producers from writing in an interleaved manner.\n         */\n        releaseLock() {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                throw defaultWriterBrandCheckException('releaseLock');\n            }\n            const stream = this._ownerWritableStream;\n            if (stream === undefined) {\n                return;\n            }\n            WritableStreamDefaultWriterRelease(this);\n        }\n        write(chunk = undefined) {\n            if (!IsWritableStreamDefaultWriter(this)) {\n                return promiseRejectedWith(defaultWriterBrandCheckException('write'));\n            }\n            if (this._ownerWritableStream === undefined) {\n                return promiseRejectedWith(defaultWriterLockException('write to'));\n            }\n            return WritableStreamDefaultWriterWrite(this, chunk);\n        }\n    }\n    Object.defineProperties(WritableStreamDefaultWriter.prototype, {\n        abort: { enumerable: true },\n        close: { enumerable: true },\n        releaseLock: { enumerable: true },\n        write: { enumerable: true },\n        closed: { enumerable: true },\n        desiredSize: { enumerable: true },\n        ready: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(WritableStreamDefaultWriter.prototype, SymbolPolyfill.toStringTag, {\n            value: 'WritableStreamDefaultWriter',\n            configurable: true\n        });\n    }\n    // Abstract operations for the WritableStreamDefaultWriter.\n    function IsWritableStreamDefaultWriter(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n            return false;\n        }\n        return x instanceof WritableStreamDefaultWriter;\n    }\n    // A client of WritableStreamDefaultWriter may use these functions directly to bypass state check.\n    function WritableStreamDefaultWriterAbort(writer, reason) {\n        const stream = writer._ownerWritableStream;\n        return WritableStreamAbort(stream, reason);\n    }\n    function WritableStreamDefaultWriterClose(writer) {\n        const stream = writer._ownerWritableStream;\n        return WritableStreamClose(stream);\n    }\n    function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {\n        const stream = writer._ownerWritableStream;\n        const state = stream._state;\n        if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n            return promiseResolvedWith(undefined);\n        }\n        if (state === 'errored') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        return WritableStreamDefaultWriterClose(writer);\n    }\n    function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {\n        if (writer._closedPromiseState === 'pending') {\n            defaultWriterClosedPromiseReject(writer, error);\n        }\n        else {\n            defaultWriterClosedPromiseResetToRejected(writer, error);\n        }\n    }\n    function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {\n        if (writer._readyPromiseState === 'pending') {\n            defaultWriterReadyPromiseReject(writer, error);\n        }\n        else {\n            defaultWriterReadyPromiseResetToRejected(writer, error);\n        }\n    }\n    function WritableStreamDefaultWriterGetDesiredSize(writer) {\n        const stream = writer._ownerWritableStream;\n        const state = stream._state;\n        if (state === 'errored' || state === 'erroring') {\n            return null;\n        }\n        if (state === 'closed') {\n            return 0;\n        }\n        return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n    }\n    function WritableStreamDefaultWriterRelease(writer) {\n        const stream = writer._ownerWritableStream;\n        const releasedError = new TypeError(`Writer was released and can no longer be used to monitor the stream's closedness`);\n        WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n        // The state transitions to \"errored\" before the sink abort() method runs, but the writer.closed promise is not\n        // rejected until afterwards. This means that simply testing state will not work.\n        WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n        stream._writer = undefined;\n        writer._ownerWritableStream = undefined;\n    }\n    function WritableStreamDefaultWriterWrite(writer, chunk) {\n        const stream = writer._ownerWritableStream;\n        const controller = stream._writableStreamController;\n        const chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n        if (stream !== writer._ownerWritableStream) {\n            return promiseRejectedWith(defaultWriterLockException('write to'));\n        }\n        const state = stream._state;\n        if (state === 'errored') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n            return promiseRejectedWith(new TypeError('The stream is closing or closed and cannot be written to'));\n        }\n        if (state === 'erroring') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        const promise = WritableStreamAddWriteRequest(stream);\n        WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n        return promise;\n    }\n    const closeSentinel = {};\n    /**\n     * Allows control of a {@link WritableStream | writable stream}'s state and internal queue.\n     *\n     * @public\n     */\n    class WritableStreamDefaultController {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * The reason which was passed to `WritableStream.abort(reason)` when the stream was aborted.\n         *\n         * @deprecated\n         *  This property has been removed from the specification, see https://github.com/whatwg/streams/pull/1177.\n         *  Use {@link WritableStreamDefaultController.signal}'s `reason` instead.\n         */\n        get abortReason() {\n            if (!IsWritableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$2('abortReason');\n            }\n            return this._abortReason;\n        }\n        /**\n         * An `AbortSignal` that can be used to abort the pending write or close operation when the stream is aborted.\n         */\n        get signal() {\n            if (!IsWritableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$2('signal');\n            }\n            if (this._abortController === undefined) {\n                // Older browsers or older Node versions may not support `AbortController` or `AbortSignal`.\n                // We don't want to bundle and ship an `AbortController` polyfill together with our polyfill,\n                // so instead we only implement support for `signal` if we find a global `AbortController` constructor.\n                throw new TypeError('WritableStreamDefaultController.prototype.signal is not supported');\n            }\n            return this._abortController.signal;\n        }\n        /**\n         * Closes the controlled writable stream, making all future interactions with it fail with the given error `e`.\n         *\n         * This method is rarely used, since usually it suffices to return a rejected promise from one of the underlying\n         * sink's methods. However, it can be useful for suddenly shutting down a stream in response to an event outside the\n         * normal lifecycle of interactions with the underlying sink.\n         */\n        error(e = undefined) {\n            if (!IsWritableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$2('error');\n            }\n            const state = this._controlledWritableStream._state;\n            if (state !== 'writable') {\n                // The stream is closed, errored or will be soon. The sink can't do anything useful if it gets an error here, so\n                // just treat it as a no-op.\n                return;\n            }\n            WritableStreamDefaultControllerError(this, e);\n        }\n        /** @internal */\n        [AbortSteps](reason) {\n            const result = this._abortAlgorithm(reason);\n            WritableStreamDefaultControllerClearAlgorithms(this);\n            return result;\n        }\n        /** @internal */\n        [ErrorSteps]() {\n            ResetQueue(this);\n        }\n    }\n    Object.defineProperties(WritableStreamDefaultController.prototype, {\n        abortReason: { enumerable: true },\n        signal: { enumerable: true },\n        error: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(WritableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {\n            value: 'WritableStreamDefaultController',\n            configurable: true\n        });\n    }\n    // Abstract operations implementing interface required by the WritableStream.\n    function IsWritableStreamDefaultController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledWritableStream')) {\n            return false;\n        }\n        return x instanceof WritableStreamDefaultController;\n    }\n    function SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm) {\n        controller._controlledWritableStream = stream;\n        stream._writableStreamController = controller;\n        // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n        controller._queue = undefined;\n        controller._queueTotalSize = undefined;\n        ResetQueue(controller);\n        controller._abortReason = undefined;\n        controller._abortController = createAbortController();\n        controller._started = false;\n        controller._strategySizeAlgorithm = sizeAlgorithm;\n        controller._strategyHWM = highWaterMark;\n        controller._writeAlgorithm = writeAlgorithm;\n        controller._closeAlgorithm = closeAlgorithm;\n        controller._abortAlgorithm = abortAlgorithm;\n        const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n        WritableStreamUpdateBackpressure(stream, backpressure);\n        const startResult = startAlgorithm();\n        const startPromise = promiseResolvedWith(startResult);\n        uponPromise(startPromise, () => {\n            controller._started = true;\n            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n        }, r => {\n            controller._started = true;\n            WritableStreamDealWithRejection(stream, r);\n        });\n    }\n    function SetUpWritableStreamDefaultControllerFromUnderlyingSink(stream, underlyingSink, highWaterMark, sizeAlgorithm) {\n        const controller = Object.create(WritableStreamDefaultController.prototype);\n        let startAlgorithm = () => undefined;\n        let writeAlgorithm = () => promiseResolvedWith(undefined);\n        let closeAlgorithm = () => promiseResolvedWith(undefined);\n        let abortAlgorithm = () => promiseResolvedWith(undefined);\n        if (underlyingSink.start !== undefined) {\n            startAlgorithm = () => underlyingSink.start(controller);\n        }\n        if (underlyingSink.write !== undefined) {\n            writeAlgorithm = chunk => underlyingSink.write(chunk, controller);\n        }\n        if (underlyingSink.close !== undefined) {\n            closeAlgorithm = () => underlyingSink.close();\n        }\n        if (underlyingSink.abort !== undefined) {\n            abortAlgorithm = reason => underlyingSink.abort(reason);\n        }\n        SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);\n    }\n    // ClearAlgorithms may be called twice. Erroring the same stream in multiple ways will often result in redundant calls.\n    function WritableStreamDefaultControllerClearAlgorithms(controller) {\n        controller._writeAlgorithm = undefined;\n        controller._closeAlgorithm = undefined;\n        controller._abortAlgorithm = undefined;\n        controller._strategySizeAlgorithm = undefined;\n    }\n    function WritableStreamDefaultControllerClose(controller) {\n        EnqueueValueWithSize(controller, closeSentinel, 0);\n        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }\n    function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {\n        try {\n            return controller._strategySizeAlgorithm(chunk);\n        }\n        catch (chunkSizeE) {\n            WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n            return 1;\n        }\n    }\n    function WritableStreamDefaultControllerGetDesiredSize(controller) {\n        return controller._strategyHWM - controller._queueTotalSize;\n    }\n    function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {\n        try {\n            EnqueueValueWithSize(controller, chunk, chunkSize);\n        }\n        catch (enqueueE) {\n            WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n            return;\n        }\n        const stream = controller._controlledWritableStream;\n        if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._state === 'writable') {\n            const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n            WritableStreamUpdateBackpressure(stream, backpressure);\n        }\n        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }\n    // Abstract operations for the WritableStreamDefaultController.\n    function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\n        const stream = controller._controlledWritableStream;\n        if (!controller._started) {\n            return;\n        }\n        if (stream._inFlightWriteRequest !== undefined) {\n            return;\n        }\n        const state = stream._state;\n        if (state === 'erroring') {\n            WritableStreamFinishErroring(stream);\n            return;\n        }\n        if (controller._queue.length === 0) {\n            return;\n        }\n        const value = PeekQueueValue(controller);\n        if (value === closeSentinel) {\n            WritableStreamDefaultControllerProcessClose(controller);\n        }\n        else {\n            WritableStreamDefaultControllerProcessWrite(controller, value);\n        }\n    }\n    function WritableStreamDefaultControllerErrorIfNeeded(controller, error) {\n        if (controller._controlledWritableStream._state === 'writable') {\n            WritableStreamDefaultControllerError(controller, error);\n        }\n    }\n    function WritableStreamDefaultControllerProcessClose(controller) {\n        const stream = controller._controlledWritableStream;\n        WritableStreamMarkCloseRequestInFlight(stream);\n        DequeueValue(controller);\n        const sinkClosePromise = controller._closeAlgorithm();\n        WritableStreamDefaultControllerClearAlgorithms(controller);\n        uponPromise(sinkClosePromise, () => {\n            WritableStreamFinishInFlightClose(stream);\n        }, reason => {\n            WritableStreamFinishInFlightCloseWithError(stream, reason);\n        });\n    }\n    function WritableStreamDefaultControllerProcessWrite(controller, chunk) {\n        const stream = controller._controlledWritableStream;\n        WritableStreamMarkFirstWriteRequestInFlight(stream);\n        const sinkWritePromise = controller._writeAlgorithm(chunk);\n        uponPromise(sinkWritePromise, () => {\n            WritableStreamFinishInFlightWrite(stream);\n            const state = stream._state;\n            DequeueValue(controller);\n            if (!WritableStreamCloseQueuedOrInFlight(stream) && state === 'writable') {\n                const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n                WritableStreamUpdateBackpressure(stream, backpressure);\n            }\n            WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n        }, reason => {\n            if (stream._state === 'writable') {\n                WritableStreamDefaultControllerClearAlgorithms(controller);\n            }\n            WritableStreamFinishInFlightWriteWithError(stream, reason);\n        });\n    }\n    function WritableStreamDefaultControllerGetBackpressure(controller) {\n        const desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n        return desiredSize <= 0;\n    }\n    // A client of WritableStreamDefaultController may use these functions directly to bypass state check.\n    function WritableStreamDefaultControllerError(controller, error) {\n        const stream = controller._controlledWritableStream;\n        WritableStreamDefaultControllerClearAlgorithms(controller);\n        WritableStreamStartErroring(stream, error);\n    }\n    // Helper functions for the WritableStream.\n    function streamBrandCheckException$2(name) {\n        return new TypeError(`WritableStream.prototype.${name} can only be used on a WritableStream`);\n    }\n    // Helper functions for the WritableStreamDefaultController.\n    function defaultControllerBrandCheckException$2(name) {\n        return new TypeError(`WritableStreamDefaultController.prototype.${name} can only be used on a WritableStreamDefaultController`);\n    }\n    // Helper functions for the WritableStreamDefaultWriter.\n    function defaultWriterBrandCheckException(name) {\n        return new TypeError(`WritableStreamDefaultWriter.prototype.${name} can only be used on a WritableStreamDefaultWriter`);\n    }\n    function defaultWriterLockException(name) {\n        return new TypeError('Cannot ' + name + ' a stream using a released writer');\n    }\n    function defaultWriterClosedPromiseInitialize(writer) {\n        writer._closedPromise = newPromise((resolve, reject) => {\n            writer._closedPromise_resolve = resolve;\n            writer._closedPromise_reject = reject;\n            writer._closedPromiseState = 'pending';\n        });\n    }\n    function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {\n        defaultWriterClosedPromiseInitialize(writer);\n        defaultWriterClosedPromiseReject(writer, reason);\n    }\n    function defaultWriterClosedPromiseInitializeAsResolved(writer) {\n        defaultWriterClosedPromiseInitialize(writer);\n        defaultWriterClosedPromiseResolve(writer);\n    }\n    function defaultWriterClosedPromiseReject(writer, reason) {\n        if (writer._closedPromise_reject === undefined) {\n            return;\n        }\n        setPromiseIsHandledToTrue(writer._closedPromise);\n        writer._closedPromise_reject(reason);\n        writer._closedPromise_resolve = undefined;\n        writer._closedPromise_reject = undefined;\n        writer._closedPromiseState = 'rejected';\n    }\n    function defaultWriterClosedPromiseResetToRejected(writer, reason) {\n        defaultWriterClosedPromiseInitializeAsRejected(writer, reason);\n    }\n    function defaultWriterClosedPromiseResolve(writer) {\n        if (writer._closedPromise_resolve === undefined) {\n            return;\n        }\n        writer._closedPromise_resolve(undefined);\n        writer._closedPromise_resolve = undefined;\n        writer._closedPromise_reject = undefined;\n        writer._closedPromiseState = 'resolved';\n    }\n    function defaultWriterReadyPromiseInitialize(writer) {\n        writer._readyPromise = newPromise((resolve, reject) => {\n            writer._readyPromise_resolve = resolve;\n            writer._readyPromise_reject = reject;\n        });\n        writer._readyPromiseState = 'pending';\n    }\n    function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {\n        defaultWriterReadyPromiseInitialize(writer);\n        defaultWriterReadyPromiseReject(writer, reason);\n    }\n    function defaultWriterReadyPromiseInitializeAsResolved(writer) {\n        defaultWriterReadyPromiseInitialize(writer);\n        defaultWriterReadyPromiseResolve(writer);\n    }\n    function defaultWriterReadyPromiseReject(writer, reason) {\n        if (writer._readyPromise_reject === undefined) {\n            return;\n        }\n        setPromiseIsHandledToTrue(writer._readyPromise);\n        writer._readyPromise_reject(reason);\n        writer._readyPromise_resolve = undefined;\n        writer._readyPromise_reject = undefined;\n        writer._readyPromiseState = 'rejected';\n    }\n    function defaultWriterReadyPromiseReset(writer) {\n        defaultWriterReadyPromiseInitialize(writer);\n    }\n    function defaultWriterReadyPromiseResetToRejected(writer, reason) {\n        defaultWriterReadyPromiseInitializeAsRejected(writer, reason);\n    }\n    function defaultWriterReadyPromiseResolve(writer) {\n        if (writer._readyPromise_resolve === undefined) {\n            return;\n        }\n        writer._readyPromise_resolve(undefined);\n        writer._readyPromise_resolve = undefined;\n        writer._readyPromise_reject = undefined;\n        writer._readyPromiseState = 'fulfilled';\n    }\n\n    /// <reference lib=\"dom\" />\n    const NativeDOMException = typeof DOMException !== 'undefined' ? DOMException : undefined;\n\n    /// <reference types=\"node\" />\n    function isDOMExceptionConstructor(ctor) {\n        if (!(typeof ctor === 'function' || typeof ctor === 'object')) {\n            return false;\n        }\n        try {\n            new ctor();\n            return true;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n    function createDOMExceptionPolyfill() {\n        // eslint-disable-next-line no-shadow\n        const ctor = function DOMException(message, name) {\n            this.message = message || '';\n            this.name = name || 'Error';\n            if (Error.captureStackTrace) {\n                Error.captureStackTrace(this, this.constructor);\n            }\n        };\n        ctor.prototype = Object.create(Error.prototype);\n        Object.defineProperty(ctor.prototype, 'constructor', { value: ctor, writable: true, configurable: true });\n        return ctor;\n    }\n    // eslint-disable-next-line no-redeclare\n    const DOMException$1 = isDOMExceptionConstructor(NativeDOMException) ? NativeDOMException : createDOMExceptionPolyfill();\n\n    function ReadableStreamPipeTo(source, dest, preventClose, preventAbort, preventCancel, signal) {\n        const reader = AcquireReadableStreamDefaultReader(source);\n        const writer = AcquireWritableStreamDefaultWriter(dest);\n        source._disturbed = true;\n        let shuttingDown = false;\n        // This is used to keep track of the spec's requirement that we wait for ongoing writes during shutdown.\n        let currentWrite = promiseResolvedWith(undefined);\n        return newPromise((resolve, reject) => {\n            let abortAlgorithm;\n            if (signal !== undefined) {\n                abortAlgorithm = () => {\n                    const error = new DOMException$1('Aborted', 'AbortError');\n                    const actions = [];\n                    if (!preventAbort) {\n                        actions.push(() => {\n                            if (dest._state === 'writable') {\n                                return WritableStreamAbort(dest, error);\n                            }\n                            return promiseResolvedWith(undefined);\n                        });\n                    }\n                    if (!preventCancel) {\n                        actions.push(() => {\n                            if (source._state === 'readable') {\n                                return ReadableStreamCancel(source, error);\n                            }\n                            return promiseResolvedWith(undefined);\n                        });\n                    }\n                    shutdownWithAction(() => Promise.all(actions.map(action => action())), true, error);\n                };\n                if (signal.aborted) {\n                    abortAlgorithm();\n                    return;\n                }\n                signal.addEventListener('abort', abortAlgorithm);\n            }\n            // Using reader and writer, read all chunks from this and write them to dest\n            // - Backpressure must be enforced\n            // - Shutdown must stop all activity\n            function pipeLoop() {\n                return newPromise((resolveLoop, rejectLoop) => {\n                    function next(done) {\n                        if (done) {\n                            resolveLoop();\n                        }\n                        else {\n                            // Use `PerformPromiseThen` instead of `uponPromise` to avoid\n                            // adding unnecessary `.catch(rethrowAssertionErrorRejection)` handlers\n                            PerformPromiseThen(pipeStep(), next, rejectLoop);\n                        }\n                    }\n                    next(false);\n                });\n            }\n            function pipeStep() {\n                if (shuttingDown) {\n                    return promiseResolvedWith(true);\n                }\n                return PerformPromiseThen(writer._readyPromise, () => {\n                    return newPromise((resolveRead, rejectRead) => {\n                        ReadableStreamDefaultReaderRead(reader, {\n                            _chunkSteps: chunk => {\n                                currentWrite = PerformPromiseThen(WritableStreamDefaultWriterWrite(writer, chunk), undefined, noop);\n                                resolveRead(false);\n                            },\n                            _closeSteps: () => resolveRead(true),\n                            _errorSteps: rejectRead\n                        });\n                    });\n                });\n            }\n            // Errors must be propagated forward\n            isOrBecomesErrored(source, reader._closedPromise, storedError => {\n                if (!preventAbort) {\n                    shutdownWithAction(() => WritableStreamAbort(dest, storedError), true, storedError);\n                }\n                else {\n                    shutdown(true, storedError);\n                }\n            });\n            // Errors must be propagated backward\n            isOrBecomesErrored(dest, writer._closedPromise, storedError => {\n                if (!preventCancel) {\n                    shutdownWithAction(() => ReadableStreamCancel(source, storedError), true, storedError);\n                }\n                else {\n                    shutdown(true, storedError);\n                }\n            });\n            // Closing must be propagated forward\n            isOrBecomesClosed(source, reader._closedPromise, () => {\n                if (!preventClose) {\n                    shutdownWithAction(() => WritableStreamDefaultWriterCloseWithErrorPropagation(writer));\n                }\n                else {\n                    shutdown();\n                }\n            });\n            // Closing must be propagated backward\n            if (WritableStreamCloseQueuedOrInFlight(dest) || dest._state === 'closed') {\n                const destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\n                if (!preventCancel) {\n                    shutdownWithAction(() => ReadableStreamCancel(source, destClosed), true, destClosed);\n                }\n                else {\n                    shutdown(true, destClosed);\n                }\n            }\n            setPromiseIsHandledToTrue(pipeLoop());\n            function waitForWritesToFinish() {\n                // Another write may have started while we were waiting on this currentWrite, so we have to be sure to wait\n                // for that too.\n                const oldCurrentWrite = currentWrite;\n                return PerformPromiseThen(currentWrite, () => oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined);\n            }\n            function isOrBecomesErrored(stream, promise, action) {\n                if (stream._state === 'errored') {\n                    action(stream._storedError);\n                }\n                else {\n                    uponRejection(promise, action);\n                }\n            }\n            function isOrBecomesClosed(stream, promise, action) {\n                if (stream._state === 'closed') {\n                    action();\n                }\n                else {\n                    uponFulfillment(promise, action);\n                }\n            }\n            function shutdownWithAction(action, originalIsError, originalError) {\n                if (shuttingDown) {\n                    return;\n                }\n                shuttingDown = true;\n                if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n                    uponFulfillment(waitForWritesToFinish(), doTheRest);\n                }\n                else {\n                    doTheRest();\n                }\n                function doTheRest() {\n                    uponPromise(action(), () => finalize(originalIsError, originalError), newError => finalize(true, newError));\n                }\n            }\n            function shutdown(isError, error) {\n                if (shuttingDown) {\n                    return;\n                }\n                shuttingDown = true;\n                if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n                    uponFulfillment(waitForWritesToFinish(), () => finalize(isError, error));\n                }\n                else {\n                    finalize(isError, error);\n                }\n            }\n            function finalize(isError, error) {\n                WritableStreamDefaultWriterRelease(writer);\n                ReadableStreamReaderGenericRelease(reader);\n                if (signal !== undefined) {\n                    signal.removeEventListener('abort', abortAlgorithm);\n                }\n                if (isError) {\n                    reject(error);\n                }\n                else {\n                    resolve(undefined);\n                }\n            }\n        });\n    }\n\n    /**\n     * Allows control of a {@link ReadableStream | readable stream}'s state and internal queue.\n     *\n     * @public\n     */\n    class ReadableStreamDefaultController {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n         * over-full. An underlying source ought to use this information to determine when and how to apply backpressure.\n         */\n        get desiredSize() {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('desiredSize');\n            }\n            return ReadableStreamDefaultControllerGetDesiredSize(this);\n        }\n        /**\n         * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n         * the stream, but once those are read, the stream will become closed.\n         */\n        close() {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('close');\n            }\n            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n                throw new TypeError('The stream is not in a state that permits close');\n            }\n            ReadableStreamDefaultControllerClose(this);\n        }\n        enqueue(chunk = undefined) {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('enqueue');\n            }\n            if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n                throw new TypeError('The stream is not in a state that permits enqueue');\n            }\n            return ReadableStreamDefaultControllerEnqueue(this, chunk);\n        }\n        /**\n         * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n         */\n        error(e = undefined) {\n            if (!IsReadableStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException$1('error');\n            }\n            ReadableStreamDefaultControllerError(this, e);\n        }\n        /** @internal */\n        [CancelSteps](reason) {\n            ResetQueue(this);\n            const result = this._cancelAlgorithm(reason);\n            ReadableStreamDefaultControllerClearAlgorithms(this);\n            return result;\n        }\n        /** @internal */\n        [PullSteps](readRequest) {\n            const stream = this._controlledReadableStream;\n            if (this._queue.length > 0) {\n                const chunk = DequeueValue(this);\n                if (this._closeRequested && this._queue.length === 0) {\n                    ReadableStreamDefaultControllerClearAlgorithms(this);\n                    ReadableStreamClose(stream);\n                }\n                else {\n                    ReadableStreamDefaultControllerCallPullIfNeeded(this);\n                }\n                readRequest._chunkSteps(chunk);\n            }\n            else {\n                ReadableStreamAddReadRequest(stream, readRequest);\n                ReadableStreamDefaultControllerCallPullIfNeeded(this);\n            }\n        }\n    }\n    Object.defineProperties(ReadableStreamDefaultController.prototype, {\n        close: { enumerable: true },\n        enqueue: { enumerable: true },\n        error: { enumerable: true },\n        desiredSize: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableStreamDefaultController',\n            configurable: true\n        });\n    }\n    // Abstract operations for the ReadableStreamDefaultController.\n    function IsReadableStreamDefaultController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableStream')) {\n            return false;\n        }\n        return x instanceof ReadableStreamDefaultController;\n    }\n    function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {\n        const shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n        if (!shouldPull) {\n            return;\n        }\n        if (controller._pulling) {\n            controller._pullAgain = true;\n            return;\n        }\n        controller._pulling = true;\n        const pullPromise = controller._pullAlgorithm();\n        uponPromise(pullPromise, () => {\n            controller._pulling = false;\n            if (controller._pullAgain) {\n                controller._pullAgain = false;\n                ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n            }\n        }, e => {\n            ReadableStreamDefaultControllerError(controller, e);\n        });\n    }\n    function ReadableStreamDefaultControllerShouldCallPull(controller) {\n        const stream = controller._controlledReadableStream;\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n            return false;\n        }\n        if (!controller._started) {\n            return false;\n        }\n        if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n            return true;\n        }\n        const desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n        if (desiredSize > 0) {\n            return true;\n        }\n        return false;\n    }\n    function ReadableStreamDefaultControllerClearAlgorithms(controller) {\n        controller._pullAlgorithm = undefined;\n        controller._cancelAlgorithm = undefined;\n        controller._strategySizeAlgorithm = undefined;\n    }\n    // A client of ReadableStreamDefaultController may use these functions directly to bypass state check.\n    function ReadableStreamDefaultControllerClose(controller) {\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n            return;\n        }\n        const stream = controller._controlledReadableStream;\n        controller._closeRequested = true;\n        if (controller._queue.length === 0) {\n            ReadableStreamDefaultControllerClearAlgorithms(controller);\n            ReadableStreamClose(stream);\n        }\n    }\n    function ReadableStreamDefaultControllerEnqueue(controller, chunk) {\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n            return;\n        }\n        const stream = controller._controlledReadableStream;\n        if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n            ReadableStreamFulfillReadRequest(stream, chunk, false);\n        }\n        else {\n            let chunkSize;\n            try {\n                chunkSize = controller._strategySizeAlgorithm(chunk);\n            }\n            catch (chunkSizeE) {\n                ReadableStreamDefaultControllerError(controller, chunkSizeE);\n                throw chunkSizeE;\n            }\n            try {\n                EnqueueValueWithSize(controller, chunk, chunkSize);\n            }\n            catch (enqueueE) {\n                ReadableStreamDefaultControllerError(controller, enqueueE);\n                throw enqueueE;\n            }\n        }\n        ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n    }\n    function ReadableStreamDefaultControllerError(controller, e) {\n        const stream = controller._controlledReadableStream;\n        if (stream._state !== 'readable') {\n            return;\n        }\n        ResetQueue(controller);\n        ReadableStreamDefaultControllerClearAlgorithms(controller);\n        ReadableStreamError(stream, e);\n    }\n    function ReadableStreamDefaultControllerGetDesiredSize(controller) {\n        const state = controller._controlledReadableStream._state;\n        if (state === 'errored') {\n            return null;\n        }\n        if (state === 'closed') {\n            return 0;\n        }\n        return controller._strategyHWM - controller._queueTotalSize;\n    }\n    // This is used in the implementation of TransformStream.\n    function ReadableStreamDefaultControllerHasBackpressure(controller) {\n        if (ReadableStreamDefaultControllerShouldCallPull(controller)) {\n            return false;\n        }\n        return true;\n    }\n    function ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) {\n        const state = controller._controlledReadableStream._state;\n        if (!controller._closeRequested && state === 'readable') {\n            return true;\n        }\n        return false;\n    }\n    function SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm) {\n        controller._controlledReadableStream = stream;\n        controller._queue = undefined;\n        controller._queueTotalSize = undefined;\n        ResetQueue(controller);\n        controller._started = false;\n        controller._closeRequested = false;\n        controller._pullAgain = false;\n        controller._pulling = false;\n        controller._strategySizeAlgorithm = sizeAlgorithm;\n        controller._strategyHWM = highWaterMark;\n        controller._pullAlgorithm = pullAlgorithm;\n        controller._cancelAlgorithm = cancelAlgorithm;\n        stream._readableStreamController = controller;\n        const startResult = startAlgorithm();\n        uponPromise(promiseResolvedWith(startResult), () => {\n            controller._started = true;\n            ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n        }, r => {\n            ReadableStreamDefaultControllerError(controller, r);\n        });\n    }\n    function SetUpReadableStreamDefaultControllerFromUnderlyingSource(stream, underlyingSource, highWaterMark, sizeAlgorithm) {\n        const controller = Object.create(ReadableStreamDefaultController.prototype);\n        let startAlgorithm = () => undefined;\n        let pullAlgorithm = () => promiseResolvedWith(undefined);\n        let cancelAlgorithm = () => promiseResolvedWith(undefined);\n        if (underlyingSource.start !== undefined) {\n            startAlgorithm = () => underlyingSource.start(controller);\n        }\n        if (underlyingSource.pull !== undefined) {\n            pullAlgorithm = () => underlyingSource.pull(controller);\n        }\n        if (underlyingSource.cancel !== undefined) {\n            cancelAlgorithm = reason => underlyingSource.cancel(reason);\n        }\n        SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);\n    }\n    // Helper functions for the ReadableStreamDefaultController.\n    function defaultControllerBrandCheckException$1(name) {\n        return new TypeError(`ReadableStreamDefaultController.prototype.${name} can only be used on a ReadableStreamDefaultController`);\n    }\n\n    function ReadableStreamTee(stream, cloneForBranch2) {\n        if (IsReadableByteStreamController(stream._readableStreamController)) {\n            return ReadableByteStreamTee(stream);\n        }\n        return ReadableStreamDefaultTee(stream);\n    }\n    function ReadableStreamDefaultTee(stream, cloneForBranch2) {\n        const reader = AcquireReadableStreamDefaultReader(stream);\n        let reading = false;\n        let readAgain = false;\n        let canceled1 = false;\n        let canceled2 = false;\n        let reason1;\n        let reason2;\n        let branch1;\n        let branch2;\n        let resolveCancelPromise;\n        const cancelPromise = newPromise(resolve => {\n            resolveCancelPromise = resolve;\n        });\n        function pullAlgorithm() {\n            if (reading) {\n                readAgain = true;\n                return promiseResolvedWith(undefined);\n            }\n            reading = true;\n            const readRequest = {\n                _chunkSteps: chunk => {\n                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n                    // successful synchronously-available reads get ahead of asynchronously-available errors.\n                    queueMicrotask(() => {\n                        readAgain = false;\n                        const chunk1 = chunk;\n                        const chunk2 = chunk;\n                        // There is no way to access the cloning code right now in the reference implementation.\n                        // If we add one then we'll need an implementation for serializable objects.\n                        // if (!canceled2 && cloneForBranch2) {\n                        //   chunk2 = StructuredDeserialize(StructuredSerialize(chunk2));\n                        // }\n                        if (!canceled1) {\n                            ReadableStreamDefaultControllerEnqueue(branch1._readableStreamController, chunk1);\n                        }\n                        if (!canceled2) {\n                            ReadableStreamDefaultControllerEnqueue(branch2._readableStreamController, chunk2);\n                        }\n                        reading = false;\n                        if (readAgain) {\n                            pullAlgorithm();\n                        }\n                    });\n                },\n                _closeSteps: () => {\n                    reading = false;\n                    if (!canceled1) {\n                        ReadableStreamDefaultControllerClose(branch1._readableStreamController);\n                    }\n                    if (!canceled2) {\n                        ReadableStreamDefaultControllerClose(branch2._readableStreamController);\n                    }\n                    if (!canceled1 || !canceled2) {\n                        resolveCancelPromise(undefined);\n                    }\n                },\n                _errorSteps: () => {\n                    reading = false;\n                }\n            };\n            ReadableStreamDefaultReaderRead(reader, readRequest);\n            return promiseResolvedWith(undefined);\n        }\n        function cancel1Algorithm(reason) {\n            canceled1 = true;\n            reason1 = reason;\n            if (canceled2) {\n                const compositeReason = CreateArrayFromList([reason1, reason2]);\n                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function cancel2Algorithm(reason) {\n            canceled2 = true;\n            reason2 = reason;\n            if (canceled1) {\n                const compositeReason = CreateArrayFromList([reason1, reason2]);\n                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function startAlgorithm() {\n            // do nothing\n        }\n        branch1 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel1Algorithm);\n        branch2 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel2Algorithm);\n        uponRejection(reader._closedPromise, (r) => {\n            ReadableStreamDefaultControllerError(branch1._readableStreamController, r);\n            ReadableStreamDefaultControllerError(branch2._readableStreamController, r);\n            if (!canceled1 || !canceled2) {\n                resolveCancelPromise(undefined);\n            }\n        });\n        return [branch1, branch2];\n    }\n    function ReadableByteStreamTee(stream) {\n        let reader = AcquireReadableStreamDefaultReader(stream);\n        let reading = false;\n        let readAgainForBranch1 = false;\n        let readAgainForBranch2 = false;\n        let canceled1 = false;\n        let canceled2 = false;\n        let reason1;\n        let reason2;\n        let branch1;\n        let branch2;\n        let resolveCancelPromise;\n        const cancelPromise = newPromise(resolve => {\n            resolveCancelPromise = resolve;\n        });\n        function forwardReaderError(thisReader) {\n            uponRejection(thisReader._closedPromise, r => {\n                if (thisReader !== reader) {\n                    return;\n                }\n                ReadableByteStreamControllerError(branch1._readableStreamController, r);\n                ReadableByteStreamControllerError(branch2._readableStreamController, r);\n                if (!canceled1 || !canceled2) {\n                    resolveCancelPromise(undefined);\n                }\n            });\n        }\n        function pullWithDefaultReader() {\n            if (IsReadableStreamBYOBReader(reader)) {\n                ReadableStreamReaderGenericRelease(reader);\n                reader = AcquireReadableStreamDefaultReader(stream);\n                forwardReaderError(reader);\n            }\n            const readRequest = {\n                _chunkSteps: chunk => {\n                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n                    // successful synchronously-available reads get ahead of asynchronously-available errors.\n                    queueMicrotask(() => {\n                        readAgainForBranch1 = false;\n                        readAgainForBranch2 = false;\n                        const chunk1 = chunk;\n                        let chunk2 = chunk;\n                        if (!canceled1 && !canceled2) {\n                            try {\n                                chunk2 = CloneAsUint8Array(chunk);\n                            }\n                            catch (cloneE) {\n                                ReadableByteStreamControllerError(branch1._readableStreamController, cloneE);\n                                ReadableByteStreamControllerError(branch2._readableStreamController, cloneE);\n                                resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n                                return;\n                            }\n                        }\n                        if (!canceled1) {\n                            ReadableByteStreamControllerEnqueue(branch1._readableStreamController, chunk1);\n                        }\n                        if (!canceled2) {\n                            ReadableByteStreamControllerEnqueue(branch2._readableStreamController, chunk2);\n                        }\n                        reading = false;\n                        if (readAgainForBranch1) {\n                            pull1Algorithm();\n                        }\n                        else if (readAgainForBranch2) {\n                            pull2Algorithm();\n                        }\n                    });\n                },\n                _closeSteps: () => {\n                    reading = false;\n                    if (!canceled1) {\n                        ReadableByteStreamControllerClose(branch1._readableStreamController);\n                    }\n                    if (!canceled2) {\n                        ReadableByteStreamControllerClose(branch2._readableStreamController);\n                    }\n                    if (branch1._readableStreamController._pendingPullIntos.length > 0) {\n                        ReadableByteStreamControllerRespond(branch1._readableStreamController, 0);\n                    }\n                    if (branch2._readableStreamController._pendingPullIntos.length > 0) {\n                        ReadableByteStreamControllerRespond(branch2._readableStreamController, 0);\n                    }\n                    if (!canceled1 || !canceled2) {\n                        resolveCancelPromise(undefined);\n                    }\n                },\n                _errorSteps: () => {\n                    reading = false;\n                }\n            };\n            ReadableStreamDefaultReaderRead(reader, readRequest);\n        }\n        function pullWithBYOBReader(view, forBranch2) {\n            if (IsReadableStreamDefaultReader(reader)) {\n                ReadableStreamReaderGenericRelease(reader);\n                reader = AcquireReadableStreamBYOBReader(stream);\n                forwardReaderError(reader);\n            }\n            const byobBranch = forBranch2 ? branch2 : branch1;\n            const otherBranch = forBranch2 ? branch1 : branch2;\n            const readIntoRequest = {\n                _chunkSteps: chunk => {\n                    // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n                    // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n                    // successful synchronously-available reads get ahead of asynchronously-available errors.\n                    queueMicrotask(() => {\n                        readAgainForBranch1 = false;\n                        readAgainForBranch2 = false;\n                        const byobCanceled = forBranch2 ? canceled2 : canceled1;\n                        const otherCanceled = forBranch2 ? canceled1 : canceled2;\n                        if (!otherCanceled) {\n                            let clonedChunk;\n                            try {\n                                clonedChunk = CloneAsUint8Array(chunk);\n                            }\n                            catch (cloneE) {\n                                ReadableByteStreamControllerError(byobBranch._readableStreamController, cloneE);\n                                ReadableByteStreamControllerError(otherBranch._readableStreamController, cloneE);\n                                resolveCancelPromise(ReadableStreamCancel(stream, cloneE));\n                                return;\n                            }\n                            if (!byobCanceled) {\n                                ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n                            }\n                            ReadableByteStreamControllerEnqueue(otherBranch._readableStreamController, clonedChunk);\n                        }\n                        else if (!byobCanceled) {\n                            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n                        }\n                        reading = false;\n                        if (readAgainForBranch1) {\n                            pull1Algorithm();\n                        }\n                        else if (readAgainForBranch2) {\n                            pull2Algorithm();\n                        }\n                    });\n                },\n                _closeSteps: chunk => {\n                    reading = false;\n                    const byobCanceled = forBranch2 ? canceled2 : canceled1;\n                    const otherCanceled = forBranch2 ? canceled1 : canceled2;\n                    if (!byobCanceled) {\n                        ReadableByteStreamControllerClose(byobBranch._readableStreamController);\n                    }\n                    if (!otherCanceled) {\n                        ReadableByteStreamControllerClose(otherBranch._readableStreamController);\n                    }\n                    if (chunk !== undefined) {\n                        if (!byobCanceled) {\n                            ReadableByteStreamControllerRespondWithNewView(byobBranch._readableStreamController, chunk);\n                        }\n                        if (!otherCanceled && otherBranch._readableStreamController._pendingPullIntos.length > 0) {\n                            ReadableByteStreamControllerRespond(otherBranch._readableStreamController, 0);\n                        }\n                    }\n                    if (!byobCanceled || !otherCanceled) {\n                        resolveCancelPromise(undefined);\n                    }\n                },\n                _errorSteps: () => {\n                    reading = false;\n                }\n            };\n            ReadableStreamBYOBReaderRead(reader, view, readIntoRequest);\n        }\n        function pull1Algorithm() {\n            if (reading) {\n                readAgainForBranch1 = true;\n                return promiseResolvedWith(undefined);\n            }\n            reading = true;\n            const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch1._readableStreamController);\n            if (byobRequest === null) {\n                pullWithDefaultReader();\n            }\n            else {\n                pullWithBYOBReader(byobRequest._view, false);\n            }\n            return promiseResolvedWith(undefined);\n        }\n        function pull2Algorithm() {\n            if (reading) {\n                readAgainForBranch2 = true;\n                return promiseResolvedWith(undefined);\n            }\n            reading = true;\n            const byobRequest = ReadableByteStreamControllerGetBYOBRequest(branch2._readableStreamController);\n            if (byobRequest === null) {\n                pullWithDefaultReader();\n            }\n            else {\n                pullWithBYOBReader(byobRequest._view, true);\n            }\n            return promiseResolvedWith(undefined);\n        }\n        function cancel1Algorithm(reason) {\n            canceled1 = true;\n            reason1 = reason;\n            if (canceled2) {\n                const compositeReason = CreateArrayFromList([reason1, reason2]);\n                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function cancel2Algorithm(reason) {\n            canceled2 = true;\n            reason2 = reason;\n            if (canceled1) {\n                const compositeReason = CreateArrayFromList([reason1, reason2]);\n                const cancelResult = ReadableStreamCancel(stream, compositeReason);\n                resolveCancelPromise(cancelResult);\n            }\n            return cancelPromise;\n        }\n        function startAlgorithm() {\n            return;\n        }\n        branch1 = CreateReadableByteStream(startAlgorithm, pull1Algorithm, cancel1Algorithm);\n        branch2 = CreateReadableByteStream(startAlgorithm, pull2Algorithm, cancel2Algorithm);\n        forwardReaderError(reader);\n        return [branch1, branch2];\n    }\n\n    function convertUnderlyingDefaultOrByteSource(source, context) {\n        assertDictionary(source, context);\n        const original = source;\n        const autoAllocateChunkSize = original === null || original === void 0 ? void 0 : original.autoAllocateChunkSize;\n        const cancel = original === null || original === void 0 ? void 0 : original.cancel;\n        const pull = original === null || original === void 0 ? void 0 : original.pull;\n        const start = original === null || original === void 0 ? void 0 : original.start;\n        const type = original === null || original === void 0 ? void 0 : original.type;\n        return {\n            autoAllocateChunkSize: autoAllocateChunkSize === undefined ?\n                undefined :\n                convertUnsignedLongLongWithEnforceRange(autoAllocateChunkSize, `${context} has member 'autoAllocateChunkSize' that`),\n            cancel: cancel === undefined ?\n                undefined :\n                convertUnderlyingSourceCancelCallback(cancel, original, `${context} has member 'cancel' that`),\n            pull: pull === undefined ?\n                undefined :\n                convertUnderlyingSourcePullCallback(pull, original, `${context} has member 'pull' that`),\n            start: start === undefined ?\n                undefined :\n                convertUnderlyingSourceStartCallback(start, original, `${context} has member 'start' that`),\n            type: type === undefined ? undefined : convertReadableStreamType(type, `${context} has member 'type' that`)\n        };\n    }\n    function convertUnderlyingSourceCancelCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (reason) => promiseCall(fn, original, [reason]);\n    }\n    function convertUnderlyingSourcePullCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => promiseCall(fn, original, [controller]);\n    }\n    function convertUnderlyingSourceStartCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => reflectCall(fn, original, [controller]);\n    }\n    function convertReadableStreamType(type, context) {\n        type = `${type}`;\n        if (type !== 'bytes') {\n            throw new TypeError(`${context} '${type}' is not a valid enumeration value for ReadableStreamType`);\n        }\n        return type;\n    }\n\n    function convertReaderOptions(options, context) {\n        assertDictionary(options, context);\n        const mode = options === null || options === void 0 ? void 0 : options.mode;\n        return {\n            mode: mode === undefined ? undefined : convertReadableStreamReaderMode(mode, `${context} has member 'mode' that`)\n        };\n    }\n    function convertReadableStreamReaderMode(mode, context) {\n        mode = `${mode}`;\n        if (mode !== 'byob') {\n            throw new TypeError(`${context} '${mode}' is not a valid enumeration value for ReadableStreamReaderMode`);\n        }\n        return mode;\n    }\n\n    function convertIteratorOptions(options, context) {\n        assertDictionary(options, context);\n        const preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;\n        return { preventCancel: Boolean(preventCancel) };\n    }\n\n    function convertPipeOptions(options, context) {\n        assertDictionary(options, context);\n        const preventAbort = options === null || options === void 0 ? void 0 : options.preventAbort;\n        const preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;\n        const preventClose = options === null || options === void 0 ? void 0 : options.preventClose;\n        const signal = options === null || options === void 0 ? void 0 : options.signal;\n        if (signal !== undefined) {\n            assertAbortSignal(signal, `${context} has member 'signal' that`);\n        }\n        return {\n            preventAbort: Boolean(preventAbort),\n            preventCancel: Boolean(preventCancel),\n            preventClose: Boolean(preventClose),\n            signal\n        };\n    }\n    function assertAbortSignal(signal, context) {\n        if (!isAbortSignal(signal)) {\n            throw new TypeError(`${context} is not an AbortSignal.`);\n        }\n    }\n\n    function convertReadableWritablePair(pair, context) {\n        assertDictionary(pair, context);\n        const readable = pair === null || pair === void 0 ? void 0 : pair.readable;\n        assertRequiredField(readable, 'readable', 'ReadableWritablePair');\n        assertReadableStream(readable, `${context} has member 'readable' that`);\n        const writable = pair === null || pair === void 0 ? void 0 : pair.writable;\n        assertRequiredField(writable, 'writable', 'ReadableWritablePair');\n        assertWritableStream(writable, `${context} has member 'writable' that`);\n        return { readable, writable };\n    }\n\n    /**\n     * A readable stream represents a source of data, from which you can read.\n     *\n     * @public\n     */\n    class ReadableStream {\n        constructor(rawUnderlyingSource = {}, rawStrategy = {}) {\n            if (rawUnderlyingSource === undefined) {\n                rawUnderlyingSource = null;\n            }\n            else {\n                assertObject(rawUnderlyingSource, 'First parameter');\n            }\n            const strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n            const underlyingSource = convertUnderlyingDefaultOrByteSource(rawUnderlyingSource, 'First parameter');\n            InitializeReadableStream(this);\n            if (underlyingSource.type === 'bytes') {\n                if (strategy.size !== undefined) {\n                    throw new RangeError('The strategy for a byte stream cannot have a size function');\n                }\n                const highWaterMark = ExtractHighWaterMark(strategy, 0);\n                SetUpReadableByteStreamControllerFromUnderlyingSource(this, underlyingSource, highWaterMark);\n            }\n            else {\n                const sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n                const highWaterMark = ExtractHighWaterMark(strategy, 1);\n                SetUpReadableStreamDefaultControllerFromUnderlyingSource(this, underlyingSource, highWaterMark, sizeAlgorithm);\n            }\n        }\n        /**\n         * Whether or not the readable stream is locked to a {@link ReadableStreamDefaultReader | reader}.\n         */\n        get locked() {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('locked');\n            }\n            return IsReadableStreamLocked(this);\n        }\n        /**\n         * Cancels the stream, signaling a loss of interest in the stream by a consumer.\n         *\n         * The supplied `reason` argument will be given to the underlying source's {@link UnderlyingSource.cancel | cancel()}\n         * method, which might or might not use it.\n         */\n        cancel(reason = undefined) {\n            if (!IsReadableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$1('cancel'));\n            }\n            if (IsReadableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('Cannot cancel a stream that already has a reader'));\n            }\n            return ReadableStreamCancel(this, reason);\n        }\n        getReader(rawOptions = undefined) {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('getReader');\n            }\n            const options = convertReaderOptions(rawOptions, 'First parameter');\n            if (options.mode === undefined) {\n                return AcquireReadableStreamDefaultReader(this);\n            }\n            return AcquireReadableStreamBYOBReader(this);\n        }\n        pipeThrough(rawTransform, rawOptions = {}) {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('pipeThrough');\n            }\n            assertRequiredArgument(rawTransform, 1, 'pipeThrough');\n            const transform = convertReadableWritablePair(rawTransform, 'First parameter');\n            const options = convertPipeOptions(rawOptions, 'Second parameter');\n            if (IsReadableStreamLocked(this)) {\n                throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream');\n            }\n            if (IsWritableStreamLocked(transform.writable)) {\n                throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream');\n            }\n            const promise = ReadableStreamPipeTo(this, transform.writable, options.preventClose, options.preventAbort, options.preventCancel, options.signal);\n            setPromiseIsHandledToTrue(promise);\n            return transform.readable;\n        }\n        pipeTo(destination, rawOptions = {}) {\n            if (!IsReadableStream(this)) {\n                return promiseRejectedWith(streamBrandCheckException$1('pipeTo'));\n            }\n            if (destination === undefined) {\n                return promiseRejectedWith(`Parameter 1 is required in 'pipeTo'.`);\n            }\n            if (!IsWritableStream(destination)) {\n                return promiseRejectedWith(new TypeError(`ReadableStream.prototype.pipeTo's first argument must be a WritableStream`));\n            }\n            let options;\n            try {\n                options = convertPipeOptions(rawOptions, 'Second parameter');\n            }\n            catch (e) {\n                return promiseRejectedWith(e);\n            }\n            if (IsReadableStreamLocked(this)) {\n                return promiseRejectedWith(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));\n            }\n            if (IsWritableStreamLocked(destination)) {\n                return promiseRejectedWith(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));\n            }\n            return ReadableStreamPipeTo(this, destination, options.preventClose, options.preventAbort, options.preventCancel, options.signal);\n        }\n        /**\n         * Tees this readable stream, returning a two-element array containing the two resulting branches as\n         * new {@link ReadableStream} instances.\n         *\n         * Teeing a stream will lock it, preventing any other consumer from acquiring a reader.\n         * To cancel the stream, cancel both of the resulting branches; a composite cancellation reason will then be\n         * propagated to the stream's underlying source.\n         *\n         * Note that the chunks seen in each branch will be the same object. If the chunks are not immutable,\n         * this could allow interference between the two branches.\n         */\n        tee() {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('tee');\n            }\n            const branches = ReadableStreamTee(this);\n            return CreateArrayFromList(branches);\n        }\n        values(rawOptions = undefined) {\n            if (!IsReadableStream(this)) {\n                throw streamBrandCheckException$1('values');\n            }\n            const options = convertIteratorOptions(rawOptions, 'First parameter');\n            return AcquireReadableStreamAsyncIterator(this, options.preventCancel);\n        }\n    }\n    Object.defineProperties(ReadableStream.prototype, {\n        cancel: { enumerable: true },\n        getReader: { enumerable: true },\n        pipeThrough: { enumerable: true },\n        pipeTo: { enumerable: true },\n        tee: { enumerable: true },\n        values: { enumerable: true },\n        locked: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ReadableStream.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ReadableStream',\n            configurable: true\n        });\n    }\n    if (typeof SymbolPolyfill.asyncIterator === 'symbol') {\n        Object.defineProperty(ReadableStream.prototype, SymbolPolyfill.asyncIterator, {\n            value: ReadableStream.prototype.values,\n            writable: true,\n            configurable: true\n        });\n    }\n    // Abstract operations for the ReadableStream.\n    // Throws if and only if startAlgorithm throws.\n    function CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {\n        const stream = Object.create(ReadableStream.prototype);\n        InitializeReadableStream(stream);\n        const controller = Object.create(ReadableStreamDefaultController.prototype);\n        SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);\n        return stream;\n    }\n    // Throws if and only if startAlgorithm throws.\n    function CreateReadableByteStream(startAlgorithm, pullAlgorithm, cancelAlgorithm) {\n        const stream = Object.create(ReadableStream.prototype);\n        InitializeReadableStream(stream);\n        const controller = Object.create(ReadableByteStreamController.prototype);\n        SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, 0, undefined);\n        return stream;\n    }\n    function InitializeReadableStream(stream) {\n        stream._state = 'readable';\n        stream._reader = undefined;\n        stream._storedError = undefined;\n        stream._disturbed = false;\n    }\n    function IsReadableStream(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n            return false;\n        }\n        return x instanceof ReadableStream;\n    }\n    function IsReadableStreamLocked(stream) {\n        if (stream._reader === undefined) {\n            return false;\n        }\n        return true;\n    }\n    // ReadableStream API exposed for controllers.\n    function ReadableStreamCancel(stream, reason) {\n        stream._disturbed = true;\n        if (stream._state === 'closed') {\n            return promiseResolvedWith(undefined);\n        }\n        if (stream._state === 'errored') {\n            return promiseRejectedWith(stream._storedError);\n        }\n        ReadableStreamClose(stream);\n        const reader = stream._reader;\n        if (reader !== undefined && IsReadableStreamBYOBReader(reader)) {\n            reader._readIntoRequests.forEach(readIntoRequest => {\n                readIntoRequest._closeSteps(undefined);\n            });\n            reader._readIntoRequests = new SimpleQueue();\n        }\n        const sourceCancelPromise = stream._readableStreamController[CancelSteps](reason);\n        return transformPromiseWith(sourceCancelPromise, noop);\n    }\n    function ReadableStreamClose(stream) {\n        stream._state = 'closed';\n        const reader = stream._reader;\n        if (reader === undefined) {\n            return;\n        }\n        defaultReaderClosedPromiseResolve(reader);\n        if (IsReadableStreamDefaultReader(reader)) {\n            reader._readRequests.forEach(readRequest => {\n                readRequest._closeSteps();\n            });\n            reader._readRequests = new SimpleQueue();\n        }\n    }\n    function ReadableStreamError(stream, e) {\n        stream._state = 'errored';\n        stream._storedError = e;\n        const reader = stream._reader;\n        if (reader === undefined) {\n            return;\n        }\n        defaultReaderClosedPromiseReject(reader, e);\n        if (IsReadableStreamDefaultReader(reader)) {\n            reader._readRequests.forEach(readRequest => {\n                readRequest._errorSteps(e);\n            });\n            reader._readRequests = new SimpleQueue();\n        }\n        else {\n            reader._readIntoRequests.forEach(readIntoRequest => {\n                readIntoRequest._errorSteps(e);\n            });\n            reader._readIntoRequests = new SimpleQueue();\n        }\n    }\n    // Helper functions for the ReadableStream.\n    function streamBrandCheckException$1(name) {\n        return new TypeError(`ReadableStream.prototype.${name} can only be used on a ReadableStream`);\n    }\n\n    function convertQueuingStrategyInit(init, context) {\n        assertDictionary(init, context);\n        const highWaterMark = init === null || init === void 0 ? void 0 : init.highWaterMark;\n        assertRequiredField(highWaterMark, 'highWaterMark', 'QueuingStrategyInit');\n        return {\n            highWaterMark: convertUnrestrictedDouble(highWaterMark)\n        };\n    }\n\n    // The size function must not have a prototype property nor be a constructor\n    const byteLengthSizeFunction = (chunk) => {\n        return chunk.byteLength;\n    };\n    try {\n        Object.defineProperty(byteLengthSizeFunction, 'name', {\n            value: 'size',\n            configurable: true\n        });\n    }\n    catch (_a) {\n        // This property is non-configurable in older browsers, so ignore if this throws.\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name#browser_compatibility\n    }\n    /**\n     * A queuing strategy that counts the number of bytes in each chunk.\n     *\n     * @public\n     */\n    class ByteLengthQueuingStrategy {\n        constructor(options) {\n            assertRequiredArgument(options, 1, 'ByteLengthQueuingStrategy');\n            options = convertQueuingStrategyInit(options, 'First parameter');\n            this._byteLengthQueuingStrategyHighWaterMark = options.highWaterMark;\n        }\n        /**\n         * Returns the high water mark provided to the constructor.\n         */\n        get highWaterMark() {\n            if (!IsByteLengthQueuingStrategy(this)) {\n                throw byteLengthBrandCheckException('highWaterMark');\n            }\n            return this._byteLengthQueuingStrategyHighWaterMark;\n        }\n        /**\n         * Measures the size of `chunk` by returning the value of its `byteLength` property.\n         */\n        get size() {\n            if (!IsByteLengthQueuingStrategy(this)) {\n                throw byteLengthBrandCheckException('size');\n            }\n            return byteLengthSizeFunction;\n        }\n    }\n    Object.defineProperties(ByteLengthQueuingStrategy.prototype, {\n        highWaterMark: { enumerable: true },\n        size: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(ByteLengthQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {\n            value: 'ByteLengthQueuingStrategy',\n            configurable: true\n        });\n    }\n    // Helper functions for the ByteLengthQueuingStrategy.\n    function byteLengthBrandCheckException(name) {\n        return new TypeError(`ByteLengthQueuingStrategy.prototype.${name} can only be used on a ByteLengthQueuingStrategy`);\n    }\n    function IsByteLengthQueuingStrategy(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_byteLengthQueuingStrategyHighWaterMark')) {\n            return false;\n        }\n        return x instanceof ByteLengthQueuingStrategy;\n    }\n\n    // The size function must not have a prototype property nor be a constructor\n    const countSizeFunction = () => {\n        return 1;\n    };\n    try {\n        Object.defineProperty(countSizeFunction, 'name', {\n            value: 'size',\n            configurable: true\n        });\n    }\n    catch (_a) {\n        // This property is non-configurable in older browsers, so ignore if this throws.\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name#browser_compatibility\n    }\n    /**\n     * A queuing strategy that counts the number of chunks.\n     *\n     * @public\n     */\n    class CountQueuingStrategy {\n        constructor(options) {\n            assertRequiredArgument(options, 1, 'CountQueuingStrategy');\n            options = convertQueuingStrategyInit(options, 'First parameter');\n            this._countQueuingStrategyHighWaterMark = options.highWaterMark;\n        }\n        /**\n         * Returns the high water mark provided to the constructor.\n         */\n        get highWaterMark() {\n            if (!IsCountQueuingStrategy(this)) {\n                throw countBrandCheckException('highWaterMark');\n            }\n            return this._countQueuingStrategyHighWaterMark;\n        }\n        /**\n         * Measures the size of `chunk` by always returning 1.\n         * This ensures that the total queue size is a count of the number of chunks in the queue.\n         */\n        get size() {\n            if (!IsCountQueuingStrategy(this)) {\n                throw countBrandCheckException('size');\n            }\n            return countSizeFunction;\n        }\n    }\n    Object.defineProperties(CountQueuingStrategy.prototype, {\n        highWaterMark: { enumerable: true },\n        size: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(CountQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {\n            value: 'CountQueuingStrategy',\n            configurable: true\n        });\n    }\n    // Helper functions for the CountQueuingStrategy.\n    function countBrandCheckException(name) {\n        return new TypeError(`CountQueuingStrategy.prototype.${name} can only be used on a CountQueuingStrategy`);\n    }\n    function IsCountQueuingStrategy(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_countQueuingStrategyHighWaterMark')) {\n            return false;\n        }\n        return x instanceof CountQueuingStrategy;\n    }\n\n    function convertTransformer(original, context) {\n        assertDictionary(original, context);\n        const flush = original === null || original === void 0 ? void 0 : original.flush;\n        const readableType = original === null || original === void 0 ? void 0 : original.readableType;\n        const start = original === null || original === void 0 ? void 0 : original.start;\n        const transform = original === null || original === void 0 ? void 0 : original.transform;\n        const writableType = original === null || original === void 0 ? void 0 : original.writableType;\n        return {\n            flush: flush === undefined ?\n                undefined :\n                convertTransformerFlushCallback(flush, original, `${context} has member 'flush' that`),\n            readableType,\n            start: start === undefined ?\n                undefined :\n                convertTransformerStartCallback(start, original, `${context} has member 'start' that`),\n            transform: transform === undefined ?\n                undefined :\n                convertTransformerTransformCallback(transform, original, `${context} has member 'transform' that`),\n            writableType\n        };\n    }\n    function convertTransformerFlushCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => promiseCall(fn, original, [controller]);\n    }\n    function convertTransformerStartCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (controller) => reflectCall(fn, original, [controller]);\n    }\n    function convertTransformerTransformCallback(fn, original, context) {\n        assertFunction(fn, context);\n        return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);\n    }\n\n    // Class TransformStream\n    /**\n     * A transform stream consists of a pair of streams: a {@link WritableStream | writable stream},\n     * known as its writable side, and a {@link ReadableStream | readable stream}, known as its readable side.\n     * In a manner specific to the transform stream in question, writes to the writable side result in new data being\n     * made available for reading from the readable side.\n     *\n     * @public\n     */\n    class TransformStream {\n        constructor(rawTransformer = {}, rawWritableStrategy = {}, rawReadableStrategy = {}) {\n            if (rawTransformer === undefined) {\n                rawTransformer = null;\n            }\n            const writableStrategy = convertQueuingStrategy(rawWritableStrategy, 'Second parameter');\n            const readableStrategy = convertQueuingStrategy(rawReadableStrategy, 'Third parameter');\n            const transformer = convertTransformer(rawTransformer, 'First parameter');\n            if (transformer.readableType !== undefined) {\n                throw new RangeError('Invalid readableType specified');\n            }\n            if (transformer.writableType !== undefined) {\n                throw new RangeError('Invalid writableType specified');\n            }\n            const readableHighWaterMark = ExtractHighWaterMark(readableStrategy, 0);\n            const readableSizeAlgorithm = ExtractSizeAlgorithm(readableStrategy);\n            const writableHighWaterMark = ExtractHighWaterMark(writableStrategy, 1);\n            const writableSizeAlgorithm = ExtractSizeAlgorithm(writableStrategy);\n            let startPromise_resolve;\n            const startPromise = newPromise(resolve => {\n                startPromise_resolve = resolve;\n            });\n            InitializeTransformStream(this, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm);\n            SetUpTransformStreamDefaultControllerFromTransformer(this, transformer);\n            if (transformer.start !== undefined) {\n                startPromise_resolve(transformer.start(this._transformStreamController));\n            }\n            else {\n                startPromise_resolve(undefined);\n            }\n        }\n        /**\n         * The readable side of the transform stream.\n         */\n        get readable() {\n            if (!IsTransformStream(this)) {\n                throw streamBrandCheckException('readable');\n            }\n            return this._readable;\n        }\n        /**\n         * The writable side of the transform stream.\n         */\n        get writable() {\n            if (!IsTransformStream(this)) {\n                throw streamBrandCheckException('writable');\n            }\n            return this._writable;\n        }\n    }\n    Object.defineProperties(TransformStream.prototype, {\n        readable: { enumerable: true },\n        writable: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(TransformStream.prototype, SymbolPolyfill.toStringTag, {\n            value: 'TransformStream',\n            configurable: true\n        });\n    }\n    function InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm) {\n        function startAlgorithm() {\n            return startPromise;\n        }\n        function writeAlgorithm(chunk) {\n            return TransformStreamDefaultSinkWriteAlgorithm(stream, chunk);\n        }\n        function abortAlgorithm(reason) {\n            return TransformStreamDefaultSinkAbortAlgorithm(stream, reason);\n        }\n        function closeAlgorithm() {\n            return TransformStreamDefaultSinkCloseAlgorithm(stream);\n        }\n        stream._writable = CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, writableHighWaterMark, writableSizeAlgorithm);\n        function pullAlgorithm() {\n            return TransformStreamDefaultSourcePullAlgorithm(stream);\n        }\n        function cancelAlgorithm(reason) {\n            TransformStreamErrorWritableAndUnblockWrite(stream, reason);\n            return promiseResolvedWith(undefined);\n        }\n        stream._readable = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, readableHighWaterMark, readableSizeAlgorithm);\n        // The [[backpressure]] slot is set to undefined so that it can be initialised by TransformStreamSetBackpressure.\n        stream._backpressure = undefined;\n        stream._backpressureChangePromise = undefined;\n        stream._backpressureChangePromise_resolve = undefined;\n        TransformStreamSetBackpressure(stream, true);\n        stream._transformStreamController = undefined;\n    }\n    function IsTransformStream(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n            return false;\n        }\n        return x instanceof TransformStream;\n    }\n    // This is a no-op if both sides are already errored.\n    function TransformStreamError(stream, e) {\n        ReadableStreamDefaultControllerError(stream._readable._readableStreamController, e);\n        TransformStreamErrorWritableAndUnblockWrite(stream, e);\n    }\n    function TransformStreamErrorWritableAndUnblockWrite(stream, e) {\n        TransformStreamDefaultControllerClearAlgorithms(stream._transformStreamController);\n        WritableStreamDefaultControllerErrorIfNeeded(stream._writable._writableStreamController, e);\n        if (stream._backpressure) {\n            // Pretend that pull() was called to permit any pending write() calls to complete. TransformStreamSetBackpressure()\n            // cannot be called from enqueue() or pull() once the ReadableStream is errored, so this will will be the final time\n            // _backpressure is set.\n            TransformStreamSetBackpressure(stream, false);\n        }\n    }\n    function TransformStreamSetBackpressure(stream, backpressure) {\n        // Passes also when called during construction.\n        if (stream._backpressureChangePromise !== undefined) {\n            stream._backpressureChangePromise_resolve();\n        }\n        stream._backpressureChangePromise = newPromise(resolve => {\n            stream._backpressureChangePromise_resolve = resolve;\n        });\n        stream._backpressure = backpressure;\n    }\n    // Class TransformStreamDefaultController\n    /**\n     * Allows control of the {@link ReadableStream} and {@link WritableStream} of the associated {@link TransformStream}.\n     *\n     * @public\n     */\n    class TransformStreamDefaultController {\n        constructor() {\n            throw new TypeError('Illegal constructor');\n        }\n        /**\n         * Returns the desired size to fill the readable sideâs internal queue. It can be negative, if the queue is over-full.\n         */\n        get desiredSize() {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('desiredSize');\n            }\n            const readableController = this._controlledTransformStream._readable._readableStreamController;\n            return ReadableStreamDefaultControllerGetDesiredSize(readableController);\n        }\n        enqueue(chunk = undefined) {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('enqueue');\n            }\n            TransformStreamDefaultControllerEnqueue(this, chunk);\n        }\n        /**\n         * Errors both the readable side and the writable side of the controlled transform stream, making all future\n         * interactions with it fail with the given error `e`. Any chunks queued for transformation will be discarded.\n         */\n        error(reason = undefined) {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('error');\n            }\n            TransformStreamDefaultControllerError(this, reason);\n        }\n        /**\n         * Closes the readable side and errors the writable side of the controlled transform stream. This is useful when the\n         * transformer only needs to consume a portion of the chunks written to the writable side.\n         */\n        terminate() {\n            if (!IsTransformStreamDefaultController(this)) {\n                throw defaultControllerBrandCheckException('terminate');\n            }\n            TransformStreamDefaultControllerTerminate(this);\n        }\n    }\n    Object.defineProperties(TransformStreamDefaultController.prototype, {\n        enqueue: { enumerable: true },\n        error: { enumerable: true },\n        terminate: { enumerable: true },\n        desiredSize: { enumerable: true }\n    });\n    if (typeof SymbolPolyfill.toStringTag === 'symbol') {\n        Object.defineProperty(TransformStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {\n            value: 'TransformStreamDefaultController',\n            configurable: true\n        });\n    }\n    // Transform Stream Default Controller Abstract Operations\n    function IsTransformStreamDefaultController(x) {\n        if (!typeIsObject(x)) {\n            return false;\n        }\n        if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n            return false;\n        }\n        return x instanceof TransformStreamDefaultController;\n    }\n    function SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm) {\n        controller._controlledTransformStream = stream;\n        stream._transformStreamController = controller;\n        controller._transformAlgorithm = transformAlgorithm;\n        controller._flushAlgorithm = flushAlgorithm;\n    }\n    function SetUpTransformStreamDefaultControllerFromTransformer(stream, transformer) {\n        const controller = Object.create(TransformStreamDefaultController.prototype);\n        let transformAlgorithm = (chunk) => {\n            try {\n                TransformStreamDefaultControllerEnqueue(controller, chunk);\n                return promiseResolvedWith(undefined);\n            }\n            catch (transformResultE) {\n                return promiseRejectedWith(transformResultE);\n            }\n        };\n        let flushAlgorithm = () => promiseResolvedWith(undefined);\n        if (transformer.transform !== undefined) {\n            transformAlgorithm = chunk => transformer.transform(chunk, controller);\n        }\n        if (transformer.flush !== undefined) {\n            flushAlgorithm = () => transformer.flush(controller);\n        }\n        SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);\n    }\n    function TransformStreamDefaultControllerClearAlgorithms(controller) {\n        controller._transformAlgorithm = undefined;\n        controller._flushAlgorithm = undefined;\n    }\n    function TransformStreamDefaultControllerEnqueue(controller, chunk) {\n        const stream = controller._controlledTransformStream;\n        const readableController = stream._readable._readableStreamController;\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController)) {\n            throw new TypeError('Readable side is not in a state that permits enqueue');\n        }\n        // We throttle transform invocations based on the backpressure of the ReadableStream, but we still\n        // accept TransformStreamDefaultControllerEnqueue() calls.\n        try {\n            ReadableStreamDefaultControllerEnqueue(readableController, chunk);\n        }\n        catch (e) {\n            // This happens when readableStrategy.size() throws.\n            TransformStreamErrorWritableAndUnblockWrite(stream, e);\n            throw stream._readable._storedError;\n        }\n        const backpressure = ReadableStreamDefaultControllerHasBackpressure(readableController);\n        if (backpressure !== stream._backpressure) {\n            TransformStreamSetBackpressure(stream, true);\n        }\n    }\n    function TransformStreamDefaultControllerError(controller, e) {\n        TransformStreamError(controller._controlledTransformStream, e);\n    }\n    function TransformStreamDefaultControllerPerformTransform(controller, chunk) {\n        const transformPromise = controller._transformAlgorithm(chunk);\n        return transformPromiseWith(transformPromise, undefined, r => {\n            TransformStreamError(controller._controlledTransformStream, r);\n            throw r;\n        });\n    }\n    function TransformStreamDefaultControllerTerminate(controller) {\n        const stream = controller._controlledTransformStream;\n        const readableController = stream._readable._readableStreamController;\n        ReadableStreamDefaultControllerClose(readableController);\n        const error = new TypeError('TransformStream terminated');\n        TransformStreamErrorWritableAndUnblockWrite(stream, error);\n    }\n    // TransformStreamDefaultSink Algorithms\n    function TransformStreamDefaultSinkWriteAlgorithm(stream, chunk) {\n        const controller = stream._transformStreamController;\n        if (stream._backpressure) {\n            const backpressureChangePromise = stream._backpressureChangePromise;\n            return transformPromiseWith(backpressureChangePromise, () => {\n                const writable = stream._writable;\n                const state = writable._state;\n                if (state === 'erroring') {\n                    throw writable._storedError;\n                }\n                return TransformStreamDefaultControllerPerformTransform(controller, chunk);\n            });\n        }\n        return TransformStreamDefaultControllerPerformTransform(controller, chunk);\n    }\n    function TransformStreamDefaultSinkAbortAlgorithm(stream, reason) {\n        // abort() is not called synchronously, so it is possible for abort() to be called when the stream is already\n        // errored.\n        TransformStreamError(stream, reason);\n        return promiseResolvedWith(undefined);\n    }\n    function TransformStreamDefaultSinkCloseAlgorithm(stream) {\n        // stream._readable cannot change after construction, so caching it across a call to user code is safe.\n        const readable = stream._readable;\n        const controller = stream._transformStreamController;\n        const flushPromise = controller._flushAlgorithm();\n        TransformStreamDefaultControllerClearAlgorithms(controller);\n        // Return a promise that is fulfilled with undefined on success.\n        return transformPromiseWith(flushPromise, () => {\n            if (readable._state === 'errored') {\n                throw readable._storedError;\n            }\n            ReadableStreamDefaultControllerClose(readable._readableStreamController);\n        }, r => {\n            TransformStreamError(stream, r);\n            throw readable._storedError;\n        });\n    }\n    // TransformStreamDefaultSource Algorithms\n    function TransformStreamDefaultSourcePullAlgorithm(stream) {\n        // Invariant. Enforced by the promises returned by start() and pull().\n        TransformStreamSetBackpressure(stream, false);\n        // Prevent the next pull() call until there is backpressure.\n        return stream._backpressureChangePromise;\n    }\n    // Helper functions for the TransformStreamDefaultController.\n    function defaultControllerBrandCheckException(name) {\n        return new TypeError(`TransformStreamDefaultController.prototype.${name} can only be used on a TransformStreamDefaultController`);\n    }\n    // Helper functions for the TransformStream.\n    function streamBrandCheckException(name) {\n        return new TypeError(`TransformStream.prototype.${name} can only be used on a TransformStream`);\n    }\n\n    exports.ByteLengthQueuingStrategy = ByteLengthQueuingStrategy;\n    exports.CountQueuingStrategy = CountQueuingStrategy;\n    exports.ReadableByteStreamController = ReadableByteStreamController;\n    exports.ReadableStream = ReadableStream;\n    exports.ReadableStreamBYOBReader = ReadableStreamBYOBReader;\n    exports.ReadableStreamBYOBRequest = ReadableStreamBYOBRequest;\n    exports.ReadableStreamDefaultController = ReadableStreamDefaultController;\n    exports.ReadableStreamDefaultReader = ReadableStreamDefaultReader;\n    exports.TransformStream = TransformStream;\n    exports.TransformStreamDefaultController = TransformStreamDefaultController;\n    exports.WritableStream = WritableStream;\n    exports.WritableStreamDefaultController = WritableStreamDefaultController;\n    exports.WritableStreamDefaultWriter = WritableStreamDefaultWriter;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=ponyfill.es2018.js.map\n","/* c8 ignore start */\n// 64 KiB (same size chrome slice theirs blob into Uint8array's)\nconst POOL_SIZE = 65536\n\nif (!globalThis.ReadableStream) {\n  // `node:stream/web` got introduced in v16.5.0 as experimental\n  // and it's preferred over the polyfilled version. So we also\n  // suppress the warning that gets emitted by NodeJS for using it.\n  try {\n    const process = require('node:process')\n    const { emitWarning } = process\n    try {\n      process.emitWarning = () => {}\n      Object.assign(globalThis, require('node:stream/web'))\n      process.emitWarning = emitWarning\n    } catch (error) {\n      process.emitWarning = emitWarning\n      throw error\n    }\n  } catch (error) {\n    // fallback to polyfill implementation\n    Object.assign(globalThis, require('web-streams-polyfill/dist/ponyfill.es2018.js'))\n  }\n}\n\ntry {\n  // Don't use node: prefix for this, require+node: is not supported until node v14.14\n  // Only `import()` can use prefix in 12.20 and later\n  const { Blob } = require('buffer')\n  if (Blob && !Blob.prototype.stream) {\n    Blob.prototype.stream = function name (params) {\n      let position = 0\n      const blob = this\n\n      return new ReadableStream({\n        type: 'bytes',\n        async pull (ctrl) {\n          const chunk = blob.slice(position, Math.min(blob.size, position + POOL_SIZE))\n          const buffer = await chunk.arrayBuffer()\n          position += buffer.byteLength\n          ctrl.enqueue(new Uint8Array(buffer))\n\n          if (position === blob.size) {\n            ctrl.close()\n          }\n        }\n      })\n    }\n  }\n} catch (error) {}\n/* c8 ignore end */\n","/*! fetch-blob. MIT License. Jimmy WÃ¤rting <https://jimmy.warting.se/opensource> */\n\n// TODO (jimmywarting): in the feature use conditional loading with top level await (requires 14.x)\n// Node has recently added whatwg stream into core\n\nimport './streams.cjs'\n\n// 64 KiB (same size chrome slice theirs blob into Uint8array's)\nconst POOL_SIZE = 65536\n\n/** @param {(Blob | Uint8Array)[]} parts */\nasync function * toIterator (parts, clone = true) {\n  for (const part of parts) {\n    if ('stream' in part) {\n      yield * (/** @type {AsyncIterableIterator<Uint8Array>} */ (part.stream()))\n    } else if (ArrayBuffer.isView(part)) {\n      if (clone) {\n        let position = part.byteOffset\n        const end = part.byteOffset + part.byteLength\n        while (position !== end) {\n          const size = Math.min(end - position, POOL_SIZE)\n          const chunk = part.buffer.slice(position, position + size)\n          position += chunk.byteLength\n          yield new Uint8Array(chunk)\n        }\n      } else {\n        yield part\n      }\n    /* c8 ignore next 10 */\n    } else {\n      // For blobs that have arrayBuffer but no stream method (nodes buffer.Blob)\n      let position = 0, b = (/** @type {Blob} */ (part))\n      while (position !== b.size) {\n        const chunk = b.slice(position, Math.min(b.size, position + POOL_SIZE))\n        const buffer = await chunk.arrayBuffer()\n        position += buffer.byteLength\n        yield new Uint8Array(buffer)\n      }\n    }\n  }\n}\n\nconst _Blob = class Blob {\n  /** @type {Array.<(Blob|Uint8Array)>} */\n  #parts = []\n  #type = ''\n  #size = 0\n  #endings = 'transparent'\n\n  /**\n   * The Blob() constructor returns a new Blob object. The content\n   * of the blob consists of the concatenation of the values given\n   * in the parameter array.\n   *\n   * @param {*} blobParts\n   * @param {{ type?: string, endings?: string }} [options]\n   */\n  constructor (blobParts = [], options = {}) {\n    if (typeof blobParts !== 'object' || blobParts === null) {\n      throw new TypeError('Failed to construct \\'Blob\\': The provided value cannot be converted to a sequence.')\n    }\n\n    if (typeof blobParts[Symbol.iterator] !== 'function') {\n      throw new TypeError('Failed to construct \\'Blob\\': The object must have a callable @@iterator property.')\n    }\n\n    if (typeof options !== 'object' && typeof options !== 'function') {\n      throw new TypeError('Failed to construct \\'Blob\\': parameter 2 cannot convert to dictionary.')\n    }\n\n    if (options === null) options = {}\n\n    const encoder = new TextEncoder()\n    for (const element of blobParts) {\n      let part\n      if (ArrayBuffer.isView(element)) {\n        part = new Uint8Array(element.buffer.slice(element.byteOffset, element.byteOffset + element.byteLength))\n      } else if (element instanceof ArrayBuffer) {\n        part = new Uint8Array(element.slice(0))\n      } else if (element instanceof Blob) {\n        part = element\n      } else {\n        part = encoder.encode(`${element}`)\n      }\n\n      this.#size += ArrayBuffer.isView(part) ? part.byteLength : part.size\n      this.#parts.push(part)\n    }\n\n    this.#endings = `${options.endings === undefined ? 'transparent' : options.endings}`\n    const type = options.type === undefined ? '' : String(options.type)\n    this.#type = /^[\\x20-\\x7E]*$/.test(type) ? type : ''\n  }\n\n  /**\n   * The Blob interface's size property returns the\n   * size of the Blob in bytes.\n   */\n  get size () {\n    return this.#size\n  }\n\n  /**\n   * The type property of a Blob object returns the MIME type of the file.\n   */\n  get type () {\n    return this.#type\n  }\n\n  /**\n   * The text() method in the Blob interface returns a Promise\n   * that resolves with a string containing the contents of\n   * the blob, interpreted as UTF-8.\n   *\n   * @return {Promise<string>}\n   */\n  async text () {\n    // More optimized than using this.arrayBuffer()\n    // that requires twice as much ram\n    const decoder = new TextDecoder()\n    let str = ''\n    for await (const part of toIterator(this.#parts, false)) {\n      str += decoder.decode(part, { stream: true })\n    }\n    // Remaining\n    str += decoder.decode()\n    return str\n  }\n\n  /**\n   * The arrayBuffer() method in the Blob interface returns a\n   * Promise that resolves with the contents of the blob as\n   * binary data contained in an ArrayBuffer.\n   *\n   * @return {Promise<ArrayBuffer>}\n   */\n  async arrayBuffer () {\n    // Easier way... Just a unnecessary overhead\n    // const view = new Uint8Array(this.size);\n    // await this.stream().getReader({mode: 'byob'}).read(view);\n    // return view.buffer;\n\n    const data = new Uint8Array(this.size)\n    let offset = 0\n    for await (const chunk of toIterator(this.#parts, false)) {\n      data.set(chunk, offset)\n      offset += chunk.length\n    }\n\n    return data.buffer\n  }\n\n  stream () {\n    const it = toIterator(this.#parts, true)\n\n    return new globalThis.ReadableStream({\n      // @ts-ignore\n      type: 'bytes',\n      async pull (ctrl) {\n        const chunk = await it.next()\n        chunk.done ? ctrl.close() : ctrl.enqueue(chunk.value)\n      },\n\n      async cancel () {\n        await it.return()\n      }\n    })\n  }\n\n  /**\n   * The Blob interface's slice() method creates and returns a\n   * new Blob object which contains data from a subset of the\n   * blob on which it's called.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @param {string} [type]\n   */\n  slice (start = 0, end = this.size, type = '') {\n    const { size } = this\n\n    let relativeStart = start < 0 ? Math.max(size + start, 0) : Math.min(start, size)\n    let relativeEnd = end < 0 ? Math.max(size + end, 0) : Math.min(end, size)\n\n    const span = Math.max(relativeEnd - relativeStart, 0)\n    const parts = this.#parts\n    const blobParts = []\n    let added = 0\n\n    for (const part of parts) {\n      // don't add the overflow to new blobParts\n      if (added >= span) {\n        break\n      }\n\n      const size = ArrayBuffer.isView(part) ? part.byteLength : part.size\n      if (relativeStart && size <= relativeStart) {\n        // Skip the beginning and change the relative\n        // start & end position as we skip the unwanted parts\n        relativeStart -= size\n        relativeEnd -= size\n      } else {\n        let chunk\n        if (ArrayBuffer.isView(part)) {\n          chunk = part.subarray(relativeStart, Math.min(size, relativeEnd))\n          added += chunk.byteLength\n        } else {\n          chunk = part.slice(relativeStart, Math.min(size, relativeEnd))\n          added += chunk.size\n        }\n        relativeEnd -= size\n        blobParts.push(chunk)\n        relativeStart = 0 // All next sequential parts should start at 0\n      }\n    }\n\n    const blob = new Blob([], { type: String(type).toLowerCase() })\n    blob.#size = span\n    blob.#parts = blobParts\n\n    return blob\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Blob'\n  }\n\n  static [Symbol.hasInstance] (object) {\n    return (\n      object &&\n      typeof object === 'object' &&\n      typeof object.constructor === 'function' &&\n      (\n        typeof object.stream === 'function' ||\n        typeof object.arrayBuffer === 'function'\n      ) &&\n      /^(Blob|File)$/.test(object[Symbol.toStringTag])\n    )\n  }\n}\n\nObject.defineProperties(_Blob.prototype, {\n  size: { enumerable: true },\n  type: { enumerable: true },\n  slice: { enumerable: true }\n})\n\n/** @type {typeof globalThis.Blob} */\nexport const Blob = _Blob\nexport default Blob\n","import Blob from './index.js'\n\nconst _File = class File extends Blob {\n  #lastModified = 0\n  #name = ''\n\n  /**\n   * @param {*[]} fileBits\n   * @param {string} fileName\n   * @param {{lastModified?: number, type?: string}} options\n   */// @ts-ignore\n  constructor (fileBits, fileName, options = {}) {\n    if (arguments.length < 2) {\n      throw new TypeError(`Failed to construct 'File': 2 arguments required, but only ${arguments.length} present.`)\n    }\n    super(fileBits, options)\n\n    if (options === null) options = {}\n\n    // Simulate WebIDL type casting for NaN value in lastModified option.\n    const lastModified = options.lastModified === undefined ? Date.now() : Number(options.lastModified)\n    if (!Number.isNaN(lastModified)) {\n      this.#lastModified = lastModified\n    }\n\n    this.#name = String(fileName)\n  }\n\n  get name () {\n    return this.#name\n  }\n\n  get lastModified () {\n    return this.#lastModified\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'File'\n  }\n\n  static [Symbol.hasInstance] (object) {\n    return !!object && object instanceof Blob &&\n      /^(File)$/.test(object[Symbol.toStringTag])\n  }\n}\n\n/** @type {typeof globalThis.File} */// @ts-ignore\nexport const File = _File\nexport default File\n","import { statSync, createReadStream, promises as fs } from 'node:fs'\nimport { basename } from 'node:path'\nimport DOMException from 'node-domexception'\n\nimport File from './file.js'\nimport Blob from './index.js'\n\nconst { stat } = fs\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nconst blobFromSync = (path, type) => fromBlob(statSync(path), path, type)\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<Blob>}\n */\nconst blobFrom = (path, type) => stat(path).then(stat => fromBlob(stat, path, type))\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n * @returns {Promise<File>}\n */\nconst fileFrom = (path, type) => stat(path).then(stat => fromFile(stat, path, type))\n\n/**\n * @param {string} path filepath on the disk\n * @param {string} [type] mimetype to use\n */\nconst fileFromSync = (path, type) => fromFile(statSync(path), path, type)\n\n// @ts-ignore\nconst fromBlob = (stat, path, type = '') => new Blob([new BlobDataItem({\n  path,\n  size: stat.size,\n  lastModified: stat.mtimeMs,\n  start: 0\n})], { type })\n\n// @ts-ignore\nconst fromFile = (stat, path, type = '') => new File([new BlobDataItem({\n  path,\n  size: stat.size,\n  lastModified: stat.mtimeMs,\n  start: 0\n})], basename(path), { type, lastModified: stat.mtimeMs })\n\n/**\n * This is a blob backed up by a file on the disk\n * with minium requirement. Its wrapped around a Blob as a blobPart\n * so you have no direct access to this.\n *\n * @private\n */\nclass BlobDataItem {\n  #path\n  #start\n\n  constructor (options) {\n    this.#path = options.path\n    this.#start = options.start\n    this.size = options.size\n    this.lastModified = options.lastModified\n  }\n\n  /**\n   * Slicing arguments is first validated and formatted\n   * to not be out of range by Blob.prototype.slice\n   */\n  slice (start, end) {\n    return new BlobDataItem({\n      path: this.#path,\n      lastModified: this.lastModified,\n      size: end - start,\n      start: this.#start + start\n    })\n  }\n\n  async * stream () {\n    const { mtimeMs } = await stat(this.#path)\n    if (mtimeMs > this.lastModified) {\n      throw new DOMException('The requested file could not be read, typically due to permission problems that have occurred after a reference to a file was acquired.', 'NotReadableError')\n    }\n    yield * createReadStream(this.#path, {\n      start: this.#start,\n      end: this.#start + this.size - 1\n    })\n  }\n\n  get [Symbol.toStringTag] () {\n    return 'Blob'\n  }\n}\n\nexport default blobFromSync\nexport { File, Blob, blobFrom, blobFromSync, fileFrom, fileFromSync }\n"],"names":["this","global","POOL_SIZE","require$$2","Blob","fs","statSync","File","basename","DOMException","createReadStream"],"mappings":"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"}